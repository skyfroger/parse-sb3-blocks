{"version":3,"file":"parse-sb3-blocks.cjs","sources":["../src/block-mapping/all-blocks.js","../src/block-mapping/block-enum.js","../src/block-mapping/translations.js","../src/block-mapping/options.js","../src/block-mapping/special-messages.js","../src/sanitizer.js","../src/block-mapping/block-mapping.js","../src/block-type/block.js","../src/block-type/boolean-block.js","../src/block-type/c-block.js","../src/block-type/e-block.js","../src/block-type/reporter-block.js","../src/block-type/variable.js","../src/block-type/definition.js","../src/block-type/procedure-call.js","../src/input/icon.js","../src/input/menu.js","../src/input/input.js","../src/input/stack.js","../src/parser/parse.js","../src/parser/to-scratchblocks.js"],"sourcesContent":["import { BOOLEAN_BLOCK, C_BLOCK, E_BLOCK, REPORTER_BLOCK } from './block-enum.js';\r\n\r\nexport default {\r\n    motion_movesteps: {\r\n        defaultMessage: 'move {STEPS} steps',\r\n    },\r\n    motion_turnright: {\r\n        defaultMessage: 'turn {ICON} {DEGREES} degrees',\r\n    },\r\n    motion_turnleft: {\r\n        defaultMessage: 'turn {ICON} {DEGREES} degrees',\r\n    },\r\n    motion_pointindirection: {\r\n        defaultMessage: 'point in direction {DIRECTION}',\r\n    },\r\n    motion_pointtowards: {\r\n        defaultMessage: 'point towards {TOWARDS}',\r\n    },\r\n    motion_gotoxy: {\r\n        defaultMessage: 'go to x:{X} y:{Y}',\r\n    },\r\n    motion_goto: {\r\n        defaultMessage: 'go to {TO}',\r\n    },\r\n    motion_glidesecstoxy: {\r\n        defaultMessage: 'glide {SECS} secs to x:{X} y:{Y}',\r\n    },\r\n    motion_glideto: {\r\n        defaultMessage: 'glide {SECS} secs to {TO}',\r\n    },\r\n    motion_changexby: {\r\n        defaultMessage: 'change x by {DX}',\r\n    },\r\n    motion_setx: {\r\n        defaultMessage: 'set x to {X}',\r\n    },\r\n    motion_changeyby: {\r\n        defaultMessage: 'change y by {DY}',\r\n    },\r\n    motion_sety: {\r\n        defaultMessage: 'set y to {Y}',\r\n    },\r\n    motion_ifonedgebounce: {\r\n        defaultMessage: 'if on edge, bounce',\r\n    },\r\n    motion_setrotationstyle: {\r\n        defaultMessage: 'set rotation style {STYLE}',\r\n    },\r\n    motion_xposition: {\r\n        defaultMessage: 'x position',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    motion_yposition: {\r\n        defaultMessage: 'y position',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    motion_direction: {\r\n        defaultMessage: 'direction',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    looks_sayforsecs: {\r\n        defaultMessage: 'say {MESSAGE} for {SECS} seconds',\r\n    },\r\n    looks_say: {\r\n        defaultMessage: 'say {MESSAGE}',\r\n    },\r\n    looks_thinkforsecs: {\r\n        defaultMessage: 'think {MESSAGE} for {SECS} seconds',\r\n    },\r\n    looks_think: {\r\n        defaultMessage: 'think {MESSAGE}',\r\n    },\r\n    looks_show: {\r\n        defaultMessage: 'show',\r\n    },\r\n    looks_hide: {\r\n        defaultMessage: 'hide',\r\n    },\r\n    looks_changeeffectby: {\r\n        defaultMessage: 'change {EFFECT} effect by {CHANGE}',\r\n        defaultOptions: {\r\n            category: 'looks',\r\n        },\r\n    },\r\n    looks_seteffectto: {\r\n        defaultMessage: 'set {EFFECT} effect to {VALUE}',\r\n        defaultOptions: {\r\n            category: 'looks',\r\n        },\r\n    },\r\n    looks_cleargraphiceffects: {\r\n        defaultMessage: 'clear graphic effects',\r\n    },\r\n    looks_changesizeby: {\r\n        defaultMessage: 'change size by {CHANGE}',\r\n    },\r\n    looks_setsizeto: {\r\n        defaultMessage: 'set size to {SIZE} %',\r\n    },\r\n    looks_size: {\r\n        defaultMessage: 'size',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    looks_switchcostumeto: {\r\n        defaultMessage: 'switch costume to {COSTUME}',\r\n    },\r\n    looks_nextcostume: {\r\n        defaultMessage: 'next costume',\r\n    },\r\n    looks_switchbackdropto: {\r\n        defaultMessage: 'switch backdrop to {BACKDROP}',\r\n    },\r\n    looks_gotofrontback: {\r\n        defaultMessage: 'go to {FRONT_BACK} layer',\r\n    },\r\n    looks_goforwardbackwardlayers: {\r\n        defaultMessage: 'go {FORWARD_BACKWARD} {NUM} layers',\r\n    },\r\n    looks_backdropnumbername: {\r\n        defaultMessage: 'backdrop {NUMBER_NAME}',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    looks_costumenumbername: {\r\n        defaultMessage: 'costume {NUMBER_NAME}',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    looks_switchbackdroptoandwait: {\r\n        defaultMessage: 'switch backdrop to {BACKDROP} and wait',\r\n    },\r\n    looks_nextbackdrop: {\r\n        defaultMessage: 'next backdrop',\r\n        translationKey: 'LOOKS_NEXTBACKDROP_BLOCK',\r\n    },\r\n    sound_play: {\r\n        defaultMessage: 'start sound {SOUND_MENU}',\r\n    },\r\n    sound_playuntildone: {\r\n        defaultMessage: 'play sound {SOUND_MENU} until done',\r\n    },\r\n    sound_stopallsounds: {\r\n        defaultMessage: 'stop all sounds',\r\n    },\r\n    sound_seteffectto: {\r\n        defaultMessage: 'set {EFFECT} effect to {VALUE}',\r\n        translationKey: 'SOUND_SETEFFECTO', // typo in scratch-blocks\r\n        defaultOptions: {\r\n            category: 'sound',\r\n        },\r\n    },\r\n    sound_changeeffectby: {\r\n        defaultMessage: 'change {EFFECT} effect by {VALUE}',\r\n        defaultOptions: {\r\n            category: 'sound',\r\n        },\r\n    },\r\n    sound_cleareffects: {\r\n        defaultMessage: 'clear sound effects',\r\n    },\r\n    sound_changevolumeby: {\r\n        defaultMessage: 'change volume by {VOLUME}',\r\n    },\r\n    sound_setvolumeto: {\r\n        defaultMessage: 'set volume to {VOLUME} %',\r\n    },\r\n    sound_volume: {\r\n        defaultMessage: 'volume',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    event_whenflagclicked: {\r\n        defaultMessage: 'when {ICON} clicked',\r\n    },\r\n    event_whenthisspriteclicked: {\r\n        defaultMessage: 'when this sprite clicked',\r\n    },\r\n    event_whenstageclicked: {\r\n        defaultMessage: 'when stage clicked',\r\n    },\r\n    event_whenbroadcastreceived: {\r\n        defaultMessage: 'when I receive {BROADCAST_OPTION}',\r\n    },\r\n    event_whenbackdropswitchesto: {\r\n        defaultMessage: 'when backdrop switches to {BACKDROP}',\r\n    },\r\n    event_whengreaterthan: {\r\n        defaultMessage: 'when {WHENGREATERTHANMENU} > {VALUE}',\r\n    },\r\n    event_broadcast: {\r\n        defaultMessage: 'broadcast {BROADCAST_INPUT}',\r\n    },\r\n    event_broadcastandwait: {\r\n        defaultMessage: 'broadcast {BROADCAST_INPUT} and wait',\r\n    },\r\n    event_whenkeypressed: {\r\n        defaultMessage: 'when {KEY_OPTION} key pressed',\r\n        defaultOptions: {\r\n            category: 'events',\r\n        },\r\n    },\r\n    control_forever: {\r\n        defaultMessage: 'forever',\r\n        type: C_BLOCK,\r\n    },\r\n    control_repeat: {\r\n        defaultMessage: 'repeat {TIMES}',\r\n        type: C_BLOCK,\r\n    },\r\n    control_if: {\r\n        defaultMessage: 'if {CONDITION} then',\r\n        type: C_BLOCK,\r\n        boolArg: ['CONDITION'],\r\n    },\r\n    control_if_else: {\r\n        defaultMessage: 'if {CONDITION} then',\r\n        translationKey: 'CONTROL_IF',\r\n        type: E_BLOCK,\r\n        boolArg: ['CONDITION'],\r\n    },\r\n    control_else: {\r\n        defaultMessage: 'else',\r\n    },\r\n    control_stop: {\r\n        defaultMessage: 'stop {STOP_OPTION}',\r\n    },\r\n    control_wait: {\r\n        defaultMessage: 'wait for {DURATION} seconds',\r\n    },\r\n    control_wait_until: {\r\n        defaultMessage: 'wait until {CONDITION}',\r\n        translationKey: 'CONTROL_WAITUNTIL',\r\n        boolArg: ['CONDITION'],\r\n    },\r\n    control_repeat_until: {\r\n        defaultMessage: 'repeat until {CONDITION}',\r\n        translationKey: 'CONTROL_REPEATUNTIL',\r\n        type: C_BLOCK,\r\n        boolArg: ['CONDITION'],\r\n    },\r\n    control_start_as_clone: {\r\n        defaultMessage: 'when I start as a clone',\r\n        translationKey: 'CONTROL_STARTASCLONE',\r\n    },\r\n    control_create_clone_of: {\r\n        defaultMessage: 'create clone of {CLONE_OPTION}',\r\n        translationKey: 'CONTROL_CREATECLONEOF',\r\n    },\r\n    control_delete_this_clone: {\r\n        defaultMessage: 'delete this clone',\r\n        translationKey: 'CONTROL_DELETETHISCLONE',\r\n    },\r\n    sensing_touchingobject: {\r\n        defaultMessage: 'touching {TOUCHINGOBJECTMENU} ?',\r\n        type: BOOLEAN_BLOCK,\r\n    },\r\n    sensing_touchingcolor: {\r\n        defaultMessage: 'touching color {COLOR} ?',\r\n        type: BOOLEAN_BLOCK,\r\n    },\r\n    sensing_coloristouchingcolor: {\r\n        defaultMessage: 'color {COLOR} is touching {COLOR2} ?',\r\n        type: BOOLEAN_BLOCK,\r\n    },\r\n    sensing_distanceto: {\r\n        defaultMessage: 'distance to {DISTANCETOMENU}',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    sensing_askandwait: {\r\n        defaultMessage: 'ask {QUESTION} and wait',\r\n    },\r\n    sensing_answer: {\r\n        defaultMessage: 'answer',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    sensing_keypressed: {\r\n        defaultMessage: 'key {KEY_OPTION} pressed?',\r\n        type: BOOLEAN_BLOCK,\r\n    },\r\n    sensing_mousedown: {\r\n        defaultMessage: 'mouse down?',\r\n        type: BOOLEAN_BLOCK,\r\n    },\r\n    sensing_mousex: {\r\n        defaultMessage: 'mouse x',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    sensing_mousey: {\r\n        defaultMessage: 'mouse y',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    sensing_setdragmode: {\r\n        defaultMessage: 'set drag mode {DRAG_MODE}',\r\n    },\r\n    sensing_loudness: {\r\n        defaultMessage: 'loudness',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    sensing_timer: {\r\n        defaultMessage: 'timer',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    sensing_resettimer: {\r\n        defaultMessage: 'reset timer',\r\n    },\r\n    sensing_of: {\r\n        defaultMessage: '{PROPERTY} of {OBJECT}',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    sensing_current: {\r\n        defaultMessage: 'current {CURRENTMENU}',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    sensing_dayssince2000: {\r\n        defaultMessage: 'days since 2000',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    sensing_username: {\r\n        defaultMessage: 'username',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    operator_add: {\r\n        defaultMessage: '{NUM1} + {NUM2}',\r\n        translationKey: 'OPERATORS_ADD',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    operator_subtract: {\r\n        defaultMessage: '{NUM1} - {NUM2}',\r\n        translationKey: 'OPERATORS_SUBTRACT',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    operator_multiply: {\r\n        defaultMessage: '{NUM1} * {NUM2}',\r\n        translationKey: 'OPERATORS_MULTIPLY',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    operator_divide: {\r\n        defaultMessage: '{NUM1} / {NUM2}',\r\n        translationKey: 'OPERATORS_DIVIDE',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    operator_random: {\r\n        defaultMessage: 'pick random {FROM} to {TO}',\r\n        translationKey: 'OPERATORS_RANDOM',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    operator_lt: {\r\n        defaultMessage: '{OPERAND1} < {OPERAND2}',\r\n        translationKey: 'OPERATORS_LT',\r\n        type: BOOLEAN_BLOCK,\r\n    },\r\n    operator_equals: {\r\n        defaultMessage: '{OPERAND1} = {OPERAND2}',\r\n        translationKey: 'OPERATORS_EQUALS',\r\n        type: BOOLEAN_BLOCK,\r\n    },\r\n    operator_gt: {\r\n        defaultMessage: '{OPERAND1} > {OPERAND2}',\r\n        translationKey: 'OPERATORS_GT',\r\n        type: BOOLEAN_BLOCK,\r\n    },\r\n    operator_and: {\r\n        defaultMessage: '{OPERAND1} and {OPERAND2}',\r\n        translationKey: 'OPERATORS_AND',\r\n        type: BOOLEAN_BLOCK,\r\n        boolArg: ['OPERAND1', 'OPERAND2'],\r\n    },\r\n    operator_or: {\r\n        defaultMessage: '{OPERAND1} or {OPERAND2}',\r\n        translationKey: 'OPERATORS_OR',\r\n        type: BOOLEAN_BLOCK,\r\n        boolArg: ['OPERAND1', 'OPERAND2'],\r\n    },\r\n    operator_not: {\r\n        defaultMessage: 'not {OPERAND}',\r\n        translationKey: 'OPERATORS_NOT',\r\n        type: BOOLEAN_BLOCK,\r\n        boolArg: ['OPERAND'],\r\n    },\r\n    operator_join: {\r\n        defaultMessage: 'join {STRING1} {STRING2}',\r\n        translationKey: 'OPERATORS_JOIN',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    operator_letter_of: {\r\n        defaultMessage: 'letter {LETTER} of {STRING}',\r\n        translationKey: 'OPERATORS_LETTEROF',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    operator_length: {\r\n        defaultMessage: 'length of {STRING}',\r\n        translationKey: 'OPERATORS_LENGTH',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    operator_contains: {\r\n        defaultMessage: '{STRING1} contains {STRING2} ?',\r\n        translationKey: 'OPERATORS_CONTAINS',\r\n        type: BOOLEAN_BLOCK,\r\n    },\r\n    operator_mod: {\r\n        defaultMessage: '{NUM1} mod {NUM2}',\r\n        translationKey: 'OPERATORS_MOD',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    operator_round: {\r\n        defaultMessage: 'round {NUM}',\r\n        translationKey: 'OPERATORS_ROUND',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    operator_mathop: {\r\n        defaultMessage: '{OPERATOR} of {NUM}',\r\n        translationKey: 'OPERATORS_MATHOP',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    data_variable: {\r\n        noTranslation: true,\r\n    },\r\n    data_setvariableto: {\r\n        defaultMessage: 'set {VARIABLE} to {VALUE}',\r\n    },\r\n    data_changevariableby: {\r\n        defaultMessage: 'change {VARIABLE} by {VALUE}',\r\n    },\r\n    data_showvariable: {\r\n        defaultMessage: 'show variable {VARIABLE}',\r\n    },\r\n    data_hidevariable: {\r\n        defaultMessage: 'hide variable {VARIABLE}',\r\n    },\r\n    data_listcontents: {\r\n        noTranslation: true,\r\n    },\r\n    data_addtolist: {\r\n        defaultMessage: 'add {ITEM} to {LIST}',\r\n    },\r\n    data_deleteoflist: {\r\n        defaultMessage: 'delete {INDEX} of {LIST}',\r\n    },\r\n    data_deletealloflist: {\r\n        defaultMessage: 'delete all of {LIST}',\r\n    },\r\n    data_insertatlist: {\r\n        defaultMessage: 'insert {ITEM} at {INDEX} of {LIST}',\r\n    },\r\n    data_replaceitemoflist: {\r\n        defaultMessage: 'replace item {INDEX} of {LIST} with {ITEM}',\r\n    },\r\n    data_itemoflist: {\r\n        defaultMessage: 'item {INDEX} of {LIST}',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    data_itemnumoflist: {\r\n        defaultMessage: 'item # of {ITEM} in {LIST}',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    data_lengthoflist: {\r\n        defaultMessage: 'length of {LIST}',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    data_listcontainsitem: {\r\n        defaultMessage: '{LIST} contains {ITEM} ?',\r\n        type: BOOLEAN_BLOCK,\r\n    },\r\n    data_showlist: {\r\n        defaultMessage: 'show list {LIST}',\r\n    },\r\n    data_hidelist: {\r\n        defaultMessage: 'hide list {LIST}',\r\n    },\r\n    procedures_definition: {\r\n        defaultMessage: 'define {PROC}',\r\n    },\r\n    procedures_call: {\r\n        noTranslation: true,\r\n    },\r\n    argument_reporter_boolean: {\r\n        noTranslation: true,\r\n        type: BOOLEAN_BLOCK,\r\n    },\r\n    argument_reporter_string_number: {\r\n        noTranslation: true,\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    pen_clear: {\r\n        defaultMessage: 'erase all',\r\n        translationKey: 'pen.clear',\r\n    },\r\n    pen_stamp: {\r\n        defaultMessage: 'stamp',\r\n        translationKey: 'pen.stamp',\r\n    },\r\n    pen_penDown: {\r\n        defaultMessage: 'pen down',\r\n        translationKey: 'pen.penDown',\r\n    },\r\n    pen_penUp: {\r\n        defaultMessage: 'pen up',\r\n        translationKey: 'pen.penUp',\r\n    },\r\n    pen_setPenColorToColor: {\r\n        defaultMessage: 'set pen color to {COLOR}',\r\n        translationKey: 'pen.setColor',\r\n    },\r\n    pen_changePenColorParamBy: {\r\n        defaultMessage: 'change pen {COLOR_PARAM} by {VALUE}',\r\n        translationKey: 'pen.changeColorParam',\r\n        remap: {\r\n            COLOR_PARAM: 'colorParam',\r\n        },\r\n    },\r\n    pen_setPenColorParamTo: {\r\n        defaultMessage: 'set pen {COLOR_PARAM} to {VALUE}',\r\n        translationKey: 'pen.setColorParam',\r\n        remap: {\r\n            COLOR_PARAM: 'colorParam',\r\n        },\r\n    },\r\n    pen_changePenSizeBy: {\r\n        defaultMessage: 'change pen size by {SIZE}',\r\n        translationKey: 'pen.changeSize',\r\n    },\r\n    pen_setPenSizeTo: {\r\n        defaultMessage: 'set pen size to {SIZE}',\r\n        translationKey: 'pen.setSize',\r\n    },\r\n    music_playDrumForBeats: {\r\n        defaultMessage: 'play drum {DRUM} for {BEATS} beats',\r\n        translationKey: 'music.playDrumForBeats',\r\n    },\r\n    music_restForBeats: {\r\n        defaultMessage: 'rest for {BEATS} beats',\r\n        translationKey: 'music.restForBeats',\r\n    },\r\n    music_playNoteForBeats: {\r\n        defaultMessage: 'play note {NOTE} for {BEATS} beats',\r\n        translationKey: 'music.playNoteForBeats',\r\n    },\r\n    music_setInstrument: {\r\n        defaultMessage: 'set instrument to {INSTRUMENT}',\r\n        translationKey: 'music.setInstrument',\r\n    },\r\n    music_setTempo: {\r\n        defaultMessage: 'set tempo to {TEMPO}',\r\n        translationKey: 'music.setTempo',\r\n    },\r\n    music_changeTempo: {\r\n        defaultMessage: 'change tempo by {TEMPO}',\r\n        translationKey: 'music.changeTempo',\r\n    },\r\n    music_getTempo: {\r\n        defaultMessage: 'tempo',\r\n        translationKey: 'music.getTempo',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    videoSensing_whenMotionGreaterThan: {\r\n        defaultMessage: 'when video motion > {REFERENCE}',\r\n        translationKey: 'videoSensing.whenMotionGreaterThan',\r\n    },\r\n    videoSensing_videoOn: {\r\n        defaultMessage: 'video {ATTRIBUTE} on {SUBJECT}',\r\n        translationKey: 'videoSensing.videoOn',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    videoSensing_videoToggle: {\r\n        defaultMessage: 'turn video {VIDEO_STATE}',\r\n        translationKey: 'videoSensing.videoToggle',\r\n    },\r\n    videoSensing_setVideoTransparency: {\r\n        defaultMessage: 'set video transparency to {TRANSPARENCY}',\r\n        translationKey: 'videoSensing.setVideoTransparency',\r\n    },\r\n    text2speech_speakAndWait: {\r\n        defaultMessage: 'speak {WORDS}',\r\n        translationKey: 'text2speech.speakAndWaitBlock',\r\n    },\r\n    text2speech_setVoice: {\r\n        defaultMessage: 'set voice to {VOICE}',\r\n        translationKey: 'text2speech.setVoiceBlock',\r\n        remap: {\r\n            VOICE: 'voices',\r\n        },\r\n    },\r\n    text2speech_setLanguage: {\r\n        defaultMessage: 'set language to {LANGUAGE}',\r\n        translationKey: 'text2speech.setLanguageBlock',\r\n        remap: {\r\n            LANGUAGE: 'languages',\r\n        },\r\n    },\r\n    translate_getTranslate: {\r\n        defaultMessage: 'translate {WORDS} to {LANGAUGE}',\r\n        translationKey: 'translate.translateBlock',\r\n        type: REPORTER_BLOCK,\r\n        remap: {\r\n            LANGUAGE: 'languages',\r\n        },\r\n    },\r\n    translate_getViewerLanguage: {\r\n        defaultMessage: 'language',\r\n        translationKey: 'translate.viewerLanguage',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    boost_motorOnFor: {\r\n        defaultMessage: 'turn motor {MOTOR_ID} for {DURATION} seconds',\r\n        translationKey: 'boost.motorOnFor',\r\n    },\r\n    boost_motorOnForRotation: {\r\n        defaultMessage: 'turn motor {MOTOR_ID} for {ROTATION} rotations',\r\n        translationKey: 'boost.motorOnForRotation',\r\n    },\r\n    boost_motorOn: {\r\n        defaultMessage: 'turn motor {MOTOR_ID} on',\r\n        translationKey: 'boost.motorOn',\r\n    },\r\n    boost_motorOff: {\r\n        defaultMessage: 'turn motor {MOTOR_ID} off',\r\n        translationKey: 'boost.motorOff',\r\n    },\r\n    boost_setMotorPower: {\r\n        defaultMessage: 'set motor {MOTOR_ID} speed to {POWER} %',\r\n        translationKey: 'boost.setMotorPower',\r\n    },\r\n    boost_setMotorDirection: {\r\n        defaultMessage: 'set motor {MOTOR_ID} direction {MOTOR_DIRECTION}',\r\n        translationKey: 'boost.setMotorDirection',\r\n    },\r\n    boost_getMotorPosition: {\r\n        defaultMessage: 'motor {MOTOR_REPORTER_ID} position',\r\n        translationKey: 'boost.getMotorPosition',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    boost_whenColor: {\r\n        defaultMessage: 'when {COLOR} brick seen',\r\n        translationKey: 'boost.whenColor',\r\n    },\r\n    boost_seeingColor: {\r\n        defaultMessage: 'seeing {COLOR} brick?',\r\n        translationKey: 'boost.seeingColor',\r\n        type: BOOLEAN_BLOCK,\r\n    },\r\n    boost_whenTilted: {\r\n        defaultMessage: 'when tilted {TILT_DIRECTION_ANY}',\r\n        translationKey: 'boost.whenTilted',\r\n    },\r\n    boost_getTiltAngle: {\r\n        defaultMessage: 'tilt angle {TILT_DIRECTION}',\r\n        translationKey: 'boost.getTiltAngle',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    boost_setLightHue: {\r\n        defaultMessage: 'set light color to {HUE}',\r\n        translationKey: 'boost.setLightHue',\r\n    },\r\n    ev3_motorTurnClockwise: {\r\n        defaultMessage: 'motor {PORT} turn this way for {TIME} seconds',\r\n        translationKey: 'ev3.motorTurnClockwise',\r\n        remap: {\r\n            PORT: 'motorPorts',\r\n        },\r\n    },\r\n    ev3_motorTurnCounterClockwise: {\r\n        defaultMessage: 'motor {PORT} turn that way for {TIME} seconds',\r\n        translationKey: 'ev3.motorTurnCounterClockwise',\r\n        remap: {\r\n            PORT: 'motorPorts',\r\n        },\r\n    },\r\n    ev3_motorSetPower: {\r\n        defaultMessage: 'motor {PORT} set power {POWER} %',\r\n        translationKey: 'ev3.motorSetPower',\r\n        remap: {\r\n            PORT: 'motorPorts',\r\n        },\r\n    },\r\n    ev3_getMotorPosition: {\r\n        defaultMessage: 'motor {PORT} position',\r\n        translationKey: 'ev3.getMotorPosition',\r\n        type: REPORTER_BLOCK,\r\n        remap: {\r\n            PORT: 'motorPorts',\r\n        },\r\n    },\r\n    ev3_whenButtonPressed: {\r\n        defaultMessage: 'when button {PORT} pressed',\r\n        translationKey: 'ev3.whenButtonPressed',\r\n        remap: {\r\n            PORT: 'sensorPorts',\r\n        },\r\n    },\r\n    ev3_whenDistanceLessThan: {\r\n        defaultMessage: 'when distance < {DISTANCE}',\r\n        translationKey: 'ev3.whenDistanceLessThan',\r\n    },\r\n    ev3_whenBrightnessLessThan: {\r\n        defaultMessage: 'when brightness < {DISTANCE}',\r\n        translationKey: 'ev3.whenBrightnessLessThan',\r\n    },\r\n    ev3_buttonPressed: {\r\n        defaultMessage: 'button {PORT} pressed?',\r\n        translationKey: 'ev3.buttonPressed',\r\n        type: BOOLEAN_BLOCK,\r\n        remap: {\r\n            PORT: 'sensorPorts',\r\n        },\r\n    },\r\n    ev3_getDistance: {\r\n        defaultMessage: 'distance',\r\n        translationKey: 'ev3.getDistance',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    ev3_getBrightness: {\r\n        defaultMessage: 'brightness',\r\n        translationKey: 'ev3.getBrightness',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    ev3_beep: {\r\n        defaultMessage: 'beep note {NOTE} for {TIME} secs',\r\n        translationKey: 'ev3.beepNote',\r\n    },\r\n    gdxfor_whenGesture: {\r\n        defaultMessage: 'when {GESTURE}',\r\n        translationKey: 'gdxfor.whenGesture',\r\n        remap: {\r\n            GESTURE: 'gestureOptions',\r\n        },\r\n    },\r\n    gdxfor_whenForcePushedOrPulled: {\r\n        defaultMessage: 'when force sensor {PUSH_PULL}',\r\n        translationKey: 'gdxfor.whenForcePushedOrPulled',\r\n        remap: {\r\n            PUSH_PULL: 'pushPullOptions',\r\n        },\r\n    },\r\n    gdxfor_getForce: {\r\n        defaultMessage: 'force',\r\n        translationKey: 'gdxfor.getForce',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    gdxfor_whenTilted: {\r\n        defaultMessage: 'when tilted {TILT}',\r\n        translationKey: 'gdxfor.whenTilted',\r\n        remap: {\r\n            TILT: 'tiltAnyOptions',\r\n        },\r\n    },\r\n    gdxfor_isTilted: {\r\n        defaultMessage: 'tilted {TILT}?',\r\n        translationKey: 'gdxfor.isTilted',\r\n        type: BOOLEAN_BLOCK,\r\n        remap: {\r\n            TILT: 'tiltAnyOptions',\r\n        },\r\n    },\r\n    gdxfor_getTilt: {\r\n        defaultMessage: 'tilt angle {TILT}',\r\n        translationKey: 'gdxfor.getTilt',\r\n        type: REPORTER_BLOCK,\r\n        remap: {\r\n            TILT: 'tiltOptions',\r\n        },\r\n    },\r\n    gdxfor_isFreeFalling: {\r\n        defaultMessage: 'falling?',\r\n        translationKey: 'gdxfor.isFreeFalling',\r\n        type: BOOLEAN_BLOCK,\r\n    },\r\n    gdxfor_getSpinSpeed: {\r\n        defaultMessage: 'spin speed {DIRECTION}',\r\n        translationKey: 'gdxfor.getSpin',\r\n        type: REPORTER_BLOCK,\r\n        remap: {\r\n            DIRECTION: 'axisOptions',\r\n        },\r\n    },\r\n    gdxfor_getAcceleration: {\r\n        defaultMessage: 'acceleration {DIRECTION}',\r\n        translationKey: 'gdxfor.getAcceleration',\r\n        type: REPORTER_BLOCK,\r\n        remap: {\r\n            DIRECTION: 'axisOptions',\r\n        },\r\n    },\r\n    makeymakey_whenMakeyKeyPressed: {\r\n        defaultMessage: 'when {KEY} key pressed',\r\n        translationKey: 'makeymakey.whenKeyPressed',\r\n    },\r\n    makeymakey_whenCodePressed: {\r\n        defaultMessage: 'when {SEQUENCE} pressed in order',\r\n        translationKey: 'makeymakey.whenKeysPressedInOrder',\r\n    },\r\n    microbit_whenButtonPressed: {\r\n        defaultMessage: 'when {BTN} button pressed',\r\n        translationKey: 'microbit.whenButtonPressed',\r\n        remap: {\r\n            BTN: 'buttons',\r\n        },\r\n    },\r\n    microbit_isButtonPressed: {\r\n        defaultMessage: '{BTN} button pressed?',\r\n        translationKey: 'microbit.isButtonPressed',\r\n        type: BOOLEAN_BLOCK,\r\n        remap: {\r\n            BTN: 'buttons',\r\n        },\r\n    },\r\n    microbit_whenGesture: {\r\n        defaultMessage: 'when {GESTURE}',\r\n        translationKey: 'microbit.whenGesture',\r\n        remap: {\r\n            GESTURE: 'gestures',\r\n        },\r\n    },\r\n    microbit_displaySymbol: {\r\n        defaultMessage: 'display {MATRIX}',\r\n        translationKey: 'microbit.displaySymbol',\r\n    },\r\n    microbit_displayText: {\r\n        defaultMessage: 'display text {TEXT}',\r\n        translationKey: 'microbit.displayText',\r\n    },\r\n    microbit_displayClear: {\r\n        defaultMessage: 'clear display',\r\n        translationKey: 'microbit.clearDisplay',\r\n    },\r\n    microbit_whenTilted: {\r\n        defaultMessage: 'when tilted {DIRECTION}',\r\n        translationKey: 'microbit.whenTilted',\r\n        remap: {\r\n            DIRECTION: 'tiltDirectionAny',\r\n        },\r\n    },\r\n    microbit_isTilted: {\r\n        defaultMessage: 'tilted {DIRECTION}?',\r\n        translationKey: 'microbit.isTilted',\r\n        type: BOOLEAN_BLOCK,\r\n        remap: {\r\n            DIRECTION: 'tiltDirectionAny',\r\n        },\r\n    },\r\n    microbit_getTiltAngle: {\r\n        defaultMessage: 'tilt angle {DIRECTION}',\r\n        translationKey: 'microbit.tiltAngle',\r\n        type: REPORTER_BLOCK,\r\n        remap: {\r\n            DIRECTION: 'tiltDirection',\r\n        },\r\n    },\r\n    microbit_whenPinConnected: {\r\n        defaultMessage: 'when pin {PIN} connected',\r\n        translationKey: 'microbit.whenPinConnected',\r\n        remap: {\r\n            PIN: 'touchPins',\r\n        },\r\n    },\r\n    wedo2_motorOnFor: {\r\n        defaultMessage: 'turn {MOTOR_ID} on for {DURATION} seconds',\r\n        translationKey: 'wedo2.motorOnFor',\r\n    },\r\n    wedo2_motorOn: {\r\n        defaultMessage: 'turn {MOTOR_ID} on',\r\n        translationKey: 'wedo2.motorOn',\r\n    },\r\n    wedo2_motorOff: {\r\n        defaultMessage: 'turn {MOTOR_ID} off',\r\n        translationKey: 'wedo2.motorOff',\r\n    },\r\n    wedo2_startMotorPower: {\r\n        defaultMessage: 'set {MOTOR_ID} power to {POWER}',\r\n        translationKey: 'wedo2.startMotorPower',\r\n    },\r\n    wedo2_setMotorDirection: {\r\n        defaultMessage: 'set {MOTOR_ID} direction to {MOTOR_DIRECTION}',\r\n        translationKey: 'wedo2.setMotorDirection',\r\n    },\r\n    wedo2_setLightHue: {\r\n        defaultMessage: 'set light color to {HUE}',\r\n        translationKey: 'wedo2.setLightHue',\r\n    },\r\n    wedo2_playNoteFor: {\r\n        defaultMessage: 'play note {NOTE} for {DURATION} seconds',\r\n        translationKey: 'wedo2.playNoteFor',\r\n    },\r\n    wedo2_whenDistance: {\r\n        defaultMessage: 'when distance {OP} {REFERENCE}',\r\n        translationKey: 'wedo2.whenDistance',\r\n    },\r\n    wedo2_whenTilted: {\r\n        defaultMessage: 'when tilted {TILT_DIRECTION_ANY}',\r\n        translationKey: 'wedo2.whenTilted',\r\n    },\r\n    wedo2_getDistance: {\r\n        defaultMessage: 'distance',\r\n        translationKey: 'wedo2.getDistance',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    wedo2_isTilted: {\r\n        defaultMessage: 'tilted {TILT_DIRECTION_ANY}?',\r\n        translationKey: 'wedo2.isTilted',\r\n        type: BOOLEAN_BLOCK,\r\n    },\r\n    wedo2_getTiltAngle: {\r\n        defaultMessage: 'tilt angle {TILT_DIRECTION}',\r\n        translationKey: 'wedo2.getTiltAngle',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    robot_motors_on_for_seconds: {\r\n        defaultMessage: 'motors on for {SECONDS} seconds',\r\n    },\r\n    robot_motors_on: {\r\n        defaultMessage: 'motors on',\r\n    },\r\n    robot_motors_off: {\r\n        defaultMessage: 'motors off',\r\n    },\r\n    robot_set_direction_to: {\r\n        defaultMessage: 'set robot direction to {ROBOT_DIRECTION}',\r\n    },\r\n    robot_motors_on_for_steps: {\r\n        defaultMessage: 'motors on for {STEPS} steps',\r\n    },\r\n    robot_reset_trip_meters: {\r\n        defaultMessage: 'reset trip meters',\r\n    },\r\n    robot_turnright: {\r\n        defaultMessage: 'robot turn right {DEGREES} degrees',\r\n    },\r\n    robot_turnleft: {\r\n        defaultMessage: 'robot turn left {DEGREES} degrees',\r\n    },\r\n    robot_set_motors_power: {\r\n        defaultMessage: 'set motors power {POWER}',\r\n    },\r\n    robot_set_motors_power_left_right_separately: {\r\n        defaultMessage: 'set motors power L {POWER_LEFT} R {POWER_RIGHT}',\r\n    },\r\n    robot_set_motors_left_right_power_and_direction_separately: {\r\n        defaultMessage:\r\n            'L {ROBOT_LEFT_MOTOR_DIRECTION} R {ROBOT_RIGHT_MOTOR_DIRECTION} set power L {POWER_LEFT} R {POWER_RIGHT}',\r\n        remap: {\r\n            ROBOT_LEFT_MOTOR_DIRECTION: 'ROBOT_ONE_MOTOR_DIRECTION',\r\n            ROBOT_RIGHT_MOTOR_DIRECTION: 'ROBOT_ONE_MOTOR_DIRECTION',\r\n        },\r\n    },\r\n    robot_get_sensor_data: {\r\n        defaultMessage: 'robot {ROBOT_SENSORS}',\r\n        type: REPORTER_BLOCK,\r\n    },\r\n    robot_start_button_pressed: {\r\n        defaultMessage: 'robot start button pressed?',\r\n        type: BOOLEAN_BLOCK,\r\n    },\r\n    robot_turn_led_on: {\r\n        defaultMessage: 'turn robot led in {ROBOT_POSITION} on',\r\n    },\r\n    robot_turn_led_off: {\r\n        defaultMessage: 'turn robot led in {ROBOT_POSITION} off',\r\n    },\r\n};\r\n\r\nconst effects = {\r\n    COLOR: {\r\n        translationKey: 'LOOKS_EFFECT_COLOR',\r\n        defaultMessage: 'color',\r\n    },\r\n    FISHEYE: {\r\n        translationKey: 'LOOKS_EFFECT_FISHEYE',\r\n        defaultMessage: 'fisheye',\r\n    },\r\n    WHIRL: {\r\n        translationKey: 'LOOKS_EFFECT_WHIRL',\r\n        defaultMessage: 'whirl',\r\n    },\r\n    PIXELATE: {\r\n        translationKey: 'LOOKS_EFFECT_PIXELATE',\r\n        defaultMessage: 'pixelate',\r\n    },\r\n    MOSAIC: {\r\n        translationKey: 'LOOKS_EFFECT_MOSAIC',\r\n        defaultMessage: 'mosaic',\r\n    },\r\n    BRIGHTNESS: {\r\n        translationKey: 'LOOKS_EFFECT_BRIGHTNESS',\r\n        defaultMessage: 'brightness',\r\n    },\r\n    GHOST: {\r\n        translationKey: 'LOOKS_EFFECT_GHOST',\r\n        defaultMessage: 'ghost',\r\n    },\r\n};\r\n\r\nconst backdrops = {\r\n    'next backdrop': {\r\n        translationKey: 'LOOKS_NEXTBACKDROP',\r\n        defaultMessage: 'next backdrop',\r\n    },\r\n    'previous backdrop': {\r\n        translationKey: 'LOOKS_PREVIOUSBACKDROP',\r\n        defaultMessage: 'previous backdrop',\r\n    },\r\n    'random backdrop': {\r\n        translationKey: 'LOOKS_RANDOMBACKDROP',\r\n        defaultMessage: 'random backdrop',\r\n    },\r\n};\r\n\r\nconst numberName = {\r\n    number: {\r\n        translationKey: 'LOOKS_NUMBERNAME_NUMBER',\r\n        defaultMessage: 'number',\r\n    },\r\n    name: {\r\n        translationKey: 'LOOKS_NUMBERNAME_NAME',\r\n        defaultMessage: 'name',\r\n    },\r\n};\r\n\r\nconst soundEffects = {\r\n    PITCH: {\r\n        translationKey: 'SOUND_EFFECTS_PITCH',\r\n        defaultMessage: 'pitch',\r\n    },\r\n    PAN: {\r\n        translationKey: 'SOUND_EFFECTS_PAN',\r\n        defaultMessage: 'pan',\r\n    },\r\n};\r\n\r\nconst keyOptions = {\r\n    space: {\r\n        translationKey: 'EVENT_WHENKEYPRESSED_SPACE',\r\n        defaultMessage: 'space',\r\n    },\r\n    'up arrow': {\r\n        translationKey: 'EVENT_WHENKEYPRESSED_UP',\r\n        defaultMessage: 'up arrow',\r\n    },\r\n    'down arrow': {\r\n        translationKey: 'EVENT_WHENKEYPRESSED_DOWN',\r\n        defaultMessage: 'down arrow',\r\n    },\r\n    'right arrow': {\r\n        translationKey: 'EVENT_WHENKEYPRESSED_RIGHT',\r\n        defaultMessage: 'right arrow',\r\n    },\r\n    'left arrow': {\r\n        translationKey: 'EVENT_WHENKEYPRESSED_LEFT',\r\n        defaultMessage: 'left arrow',\r\n    },\r\n    any: {\r\n        translationKey: 'EVENT_WHENKEYPRESSED_ANY',\r\n        defaultMessage: 'any',\r\n    },\r\n};\r\n\r\nconst colorParam = {\r\n    color: {\r\n        translationKey: 'pen.colorMenu.color',\r\n        defaultMessage: 'color',\r\n    },\r\n    saturation: {\r\n        translationKey: 'pen.colorMenu.saturation',\r\n        defaultMessage: 'saturation',\r\n    },\r\n    brightness: {\r\n        translationKey: 'pen.colorMenu.brightness',\r\n        defaultMessage: 'brightness',\r\n    },\r\n    transparency: {\r\n        translationKey: 'pen.colorMenu.transparency',\r\n        defaultMessage: 'transparency',\r\n    },\r\n};\r\n\r\nconst assignKey = (o, keyPrefix) => {\r\n    for (const k of Object.keys(o)) o[k].translationKey = `${keyPrefix}.${k}`;\r\n    return o;\r\n};\r\n\r\nconst translateLanguages = assignKey(\r\n    {\r\n        sq: {\r\n            defaultMessage: 'Albanian',\r\n        },\r\n        am: {\r\n            defaultMessage: 'Amharic',\r\n        },\r\n        ar: {\r\n            defaultMessage: 'Arabic',\r\n        },\r\n        hy: {\r\n            defaultMessage: 'Armenian',\r\n        },\r\n        az: {\r\n            defaultMessage: 'Azerbaijani',\r\n        },\r\n        eu: {\r\n            defaultMessage: 'Basque',\r\n        },\r\n        be: {\r\n            defaultMessage: 'Belarusian',\r\n        },\r\n        bg: {\r\n            defaultMessage: 'Bulgarian',\r\n        },\r\n        ca: {\r\n            defaultMessage: 'Catalan',\r\n        },\r\n        'zh-tw': {\r\n            defaultMessage: 'Chinese (Traditional)',\r\n        },\r\n        hr: {\r\n            defaultMessage: 'Croatian',\r\n        },\r\n        cs: {\r\n            defaultMessage: 'Czech',\r\n        },\r\n        da: {\r\n            defaultMessage: 'Danish',\r\n        },\r\n        nl: {\r\n            defaultMessage: 'Dutch',\r\n        },\r\n        en: {\r\n            defaultMessage: 'English',\r\n        },\r\n        eo: {\r\n            defaultMessage: 'Esperanto',\r\n        },\r\n        et: {\r\n            defaultMessage: 'Estonian',\r\n        },\r\n        fi: {\r\n            defaultMessage: 'Finnish',\r\n        },\r\n        fr: {\r\n            defaultMessage: 'French',\r\n        },\r\n        gl: {\r\n            defaultMessage: 'Galician',\r\n        },\r\n        de: {\r\n            defaultMessage: 'German',\r\n        },\r\n        el: {\r\n            defaultMessage: 'Greek',\r\n        },\r\n        ht: {\r\n            defaultMessage: 'Haitian Creole',\r\n        },\r\n        hi: {\r\n            defaultMessage: 'Hindi',\r\n        },\r\n        hu: {\r\n            defaultMessage: 'Hungarian',\r\n        },\r\n        is: {\r\n            defaultMessage: 'Icelandic',\r\n        },\r\n        id: {\r\n            defaultMessage: 'Indonesian',\r\n        },\r\n        ga: {\r\n            defaultMessage: 'Irish',\r\n        },\r\n        it: {\r\n            defaultMessage: 'Italian',\r\n        },\r\n        ja: {\r\n            defaultMessage: 'Japanese',\r\n        },\r\n        kn: {\r\n            defaultMessage: 'Kannada',\r\n        },\r\n        ko: {\r\n            defaultMessage: 'Korean',\r\n        },\r\n        ku: {\r\n            defaultMessage: 'Kurdish (Kurmanji)',\r\n        },\r\n        la: {\r\n            defaultMessage: 'Latin',\r\n        },\r\n        lv: {\r\n            defaultMessage: 'Latvian',\r\n        },\r\n        lt: {\r\n            defaultMessage: 'Lithuanian',\r\n        },\r\n        mk: {\r\n            defaultMessage: 'Macedonian',\r\n        },\r\n        ms: {\r\n            defaultMessage: 'Malay',\r\n        },\r\n        ml: {\r\n            defaultMessage: 'Malayalam',\r\n        },\r\n        mt: {\r\n            defaultMessage: 'Maltese',\r\n        },\r\n        mi: {\r\n            defaultMessage: 'Maori',\r\n        },\r\n        mr: {\r\n            defaultMessage: 'Marathi',\r\n        },\r\n        mn: {\r\n            defaultMessage: 'Mongolian',\r\n        },\r\n        my: {\r\n            defaultMessage: 'Myanmar (Burmese)',\r\n        },\r\n        fa: {\r\n            defaultMessage: 'Persian',\r\n        },\r\n        pl: {\r\n            defaultMessage: 'Polish',\r\n        },\r\n        pt: {\r\n            defaultMessage: 'Portuguese',\r\n        },\r\n        ro: {\r\n            defaultMessage: 'Romanian',\r\n        },\r\n        ru: {\r\n            defaultMessage: 'Russian',\r\n        },\r\n        gd: {\r\n            defaultMessage: 'Scots Gaelic',\r\n        },\r\n        sr: {\r\n            defaultMessage: 'Serbian',\r\n        },\r\n        sk: {\r\n            defaultMessage: 'Slovak',\r\n        },\r\n        sl: {\r\n            defaultMessage: 'Slovenian',\r\n        },\r\n        es: {\r\n            defaultMessage: 'Spanish',\r\n        },\r\n        sv: {\r\n            defaultMessage: 'Swedish',\r\n        },\r\n        te: {\r\n            defaultMessage: 'Telugu',\r\n        },\r\n        th: {\r\n            defaultMessage: 'Thai',\r\n        },\r\n        tr: {\r\n            defaultMessage: 'Turkish',\r\n        },\r\n        uk: {\r\n            defaultMessage: 'Ukrainian',\r\n        },\r\n        uz: {\r\n            defaultMessage: 'Uzbek',\r\n        },\r\n        vi: {\r\n            defaultMessage: 'Vietnamese',\r\n        },\r\n        cy: {\r\n            defaultMessage: 'Welsh',\r\n        },\r\n        zu: {\r\n            defaultMessage: 'Zulu',\r\n        },\r\n        he: {\r\n            defaultMessage: 'Hebrew',\r\n        },\r\n        'zh-cn': {\r\n            defaultMessage: 'Chinese (Simplified)',\r\n        },\r\n    },\r\n    'special.translate'\r\n);\r\n\r\n// Used by buildscript\r\nexport const _unkeyedTextToSpeechLanguages = {\r\n    ar: {\r\n        defaultMessage: 'Arabic',\r\n    },\r\n    'zh-cn': {\r\n        defaultMessage: 'Chinese (Mandarin)',\r\n    },\r\n    da: {\r\n        defaultMessage: 'Danish',\r\n    },\r\n    nl: {\r\n        defaultMessage: 'Dutch',\r\n    },\r\n    en: {\r\n        defaultMessage: 'English',\r\n    },\r\n    fr: {\r\n        defaultMessage: 'French',\r\n    },\r\n    de: {\r\n        defaultMessage: 'German',\r\n    },\r\n    hi: {\r\n        defaultMessage: 'Hindi',\r\n    },\r\n    is: {\r\n        defaultMessage: 'Icelandic',\r\n    },\r\n    it: {\r\n        defaultMessage: 'Italian',\r\n    },\r\n    ja: {\r\n        defaultMessage: 'Japanese',\r\n    },\r\n    ko: {\r\n        defaultMessage: 'Korean',\r\n    },\r\n    nb: {\r\n        defaultMessage: 'Norwegian',\r\n    },\r\n    pl: {\r\n        defaultMessage: 'Polish',\r\n    },\r\n    'pt-br': {\r\n        defaultMessage: 'Portuguese (Brazilian)',\r\n    },\r\n    pt: {\r\n        defaultMessage: 'Portuguese (European)',\r\n    },\r\n    ro: {\r\n        defaultMessage: 'Romanian',\r\n    },\r\n    ru: {\r\n        defaultMessage: 'Russian',\r\n    },\r\n    es: {\r\n        defaultMessage: 'Spanish (European)',\r\n    },\r\n    'es-419': {\r\n        defaultMessage: 'Spanish (Latin American)',\r\n    },\r\n    sv: {\r\n        defaultMessage: 'Swedish',\r\n    },\r\n    tr: {\r\n        defaultMessage: 'Turkish',\r\n    },\r\n    cy: {\r\n        defaultMessage: 'Welsh',\r\n    },\r\n};\r\nconst ttsLanguages = assignKey(_unkeyedTextToSpeechLanguages, 'special.tts');\r\n\r\nconst boostMotorId = {\r\n    A: {\r\n        defaultMessage: 'A',\r\n    },\r\n    B: {\r\n        defaultMessage: 'B',\r\n    },\r\n    C: {\r\n        defaultMessage: 'C',\r\n    },\r\n    D: {\r\n        defaultMessage: 'D',\r\n    },\r\n    AB: {\r\n        defaultMessage: 'AB',\r\n    },\r\n    ALL: {\r\n        defaultMessage: 'ABCD',\r\n    },\r\n};\r\n\r\nconst boostColor = {\r\n    red: {\r\n        translationKey: 'boost.color.red',\r\n        defaultMessage: 'red',\r\n    },\r\n    blue: {\r\n        translationKey: 'boost.color.blue',\r\n        defaultMessage: 'blue',\r\n    },\r\n    green: {\r\n        translationKey: 'boost.color.green',\r\n        defaultMessage: 'green',\r\n    },\r\n    yellow: {\r\n        translationKey: 'boost.color.yellow',\r\n        defaultMessage: 'yellow',\r\n    },\r\n    white: {\r\n        translationKey: 'boost.color.white',\r\n        defaultMessage: 'white',\r\n    },\r\n    black: {\r\n        translationKey: 'boost.color.black',\r\n        defaultMessage: 'black',\r\n    },\r\n    any: {\r\n        translationKey: 'boost.color.any',\r\n        defaultMessage: 'any color',\r\n    },\r\n};\r\n\r\nconst boostTilt = {\r\n    up: {\r\n        translationKey: 'boost.tiltDirection.up',\r\n        defaultMessage: 'up',\r\n    },\r\n    down: {\r\n        translationKey: 'boost.tiltDirection.down',\r\n        defaultMessage: 'down',\r\n    },\r\n    left: {\r\n        translationKey: 'boost.tiltDirection.left',\r\n        defaultMessage: 'left',\r\n    },\r\n    right: {\r\n        translationKey: 'boost.tiltDirection.right',\r\n        defaultMessage: 'right',\r\n    },\r\n};\r\n\r\nconst ev3MotorPorts = {\r\n    0: {\r\n        defaultMessage: 'A',\r\n    },\r\n    1: {\r\n        defaultMessage: 'B',\r\n    },\r\n    2: {\r\n        defaultMessage: 'C',\r\n    },\r\n    3: {\r\n        defaultMessage: 'D',\r\n    },\r\n};\r\n\r\nconst ev3SensorPorts = {\r\n    0: {\r\n        defaultMessage: '1',\r\n    },\r\n    1: {\r\n        defaultMessage: '2',\r\n    },\r\n    2: {\r\n        defaultMessage: '3',\r\n    },\r\n    3: {\r\n        defaultMessage: '4',\r\n    },\r\n};\r\n\r\nconst gdxforTilt = {\r\n    front: {\r\n        translationKey: 'gdxfor.tiltDirectionMenu.front',\r\n        defaultMessage: 'front',\r\n    },\r\n    back: {\r\n        translationKey: 'gdxfor.tiltDirectionMenu.back',\r\n        defaultMessage: 'back',\r\n    },\r\n    left: {\r\n        translationKey: 'gdxfor.tiltDirectionMenu.left',\r\n        defaultMessage: 'left',\r\n    },\r\n    right: {\r\n        translationKey: 'gdxfor.tiltDirectionMenu.right',\r\n        defaultMessage: 'right',\r\n    },\r\n};\r\n\r\nconst gdxforTiltAny = Object.assign({}, gdxforTilt, {\r\n    any: {\r\n        translationKey: 'gdxfor.tiltDirectionMenu.any',\r\n        defaultMessage: 'any',\r\n    },\r\n});\r\n\r\nconst gdxforAxis = {\r\n    x: {\r\n        defaultMessage: 'x',\r\n    },\r\n    y: {\r\n        defaultMessage: 'y',\r\n    },\r\n    z: {\r\n        defaultMessage: 'z',\r\n    },\r\n};\r\n\r\nconst makeMakeymakeyCombs = (keyPrefix, ...combinations) =>\r\n    Object.fromEntries(\r\n        combinations.map(c => [\r\n            c.toUpperCase(),\r\n            {\r\n                defaultMessage: c,\r\n                translationKey: `${keyPrefix}.${c.replace(/ /g, '.')}`,\r\n            },\r\n        ])\r\n    );\r\n\r\nconst makeymakeySequences = makeMakeymakeyCombs(\r\n    'special.makeymakey',\r\n    'left up right',\r\n    'right up left',\r\n    'left right',\r\n    'right left',\r\n    'up down',\r\n    'down up',\r\n    'up right down left',\r\n    'up left down right',\r\n    'up up down down left right left right'\r\n);\r\n\r\nconst microbitButtons = {\r\n    A: {\r\n        defaultMessage: 'A',\r\n    },\r\n    B: {\r\n        defaultMessage: 'B',\r\n    },\r\n    any: {\r\n        translationKey: 'microbit.buttonsMenu.any',\r\n        defaultMessage: 'any',\r\n    },\r\n};\r\n\r\nconst microbitTilt = {\r\n    front: {\r\n        translationKey: 'microbit.tiltDirectionMenu.front',\r\n        defaultMessage: 'front',\r\n    },\r\n    back: {\r\n        translationKey: 'microbit.tiltDirectionMenu.back',\r\n        defaultMessage: 'back',\r\n    },\r\n    left: {\r\n        translationKey: 'microbit.tiltDirectionMenu.left',\r\n        defaultMessage: 'left',\r\n    },\r\n    right: {\r\n        translationKey: 'microbit.tiltDirectionMenu.right',\r\n        defaultMessage: 'right',\r\n    },\r\n};\r\n\r\nconst microbitTiltAny = Object.assign({}, microbitTilt, {\r\n    any: {\r\n        translationKey: 'microbit.tiltDirectionMenu.any',\r\n        defaultMessage: 'any',\r\n    },\r\n});\r\n\r\nconst wedo2Motors = {\r\n    motor: {\r\n        translationKey: 'wedo2.motorId.default',\r\n        defaultMessage: 'motor',\r\n    },\r\n    'motor A': {\r\n        translationKey: 'wedo2.motorId.a',\r\n        defaultMessage: 'motor A',\r\n    },\r\n    'motor B': {\r\n        translationKey: 'wedo2.motorId.b',\r\n        defaultMessage: 'motor B',\r\n    },\r\n    'all motors': {\r\n        translationKey: 'wedo2.motorId.all',\r\n        defaultMessage: 'all motors',\r\n    },\r\n};\r\n\r\nconst wedo2Tilt = {\r\n    up: {\r\n        translationKey: 'wedo2.tiltDirection.up',\r\n        defaultMessage: 'up',\r\n    },\r\n    down: {\r\n        translationKey: 'wedo2.tiltDirection.down',\r\n        defaultMessage: 'down',\r\n    },\r\n    left: {\r\n        translationKey: 'wedo2.tiltDirection.left',\r\n        defaultMessage: 'left',\r\n    },\r\n    right: {\r\n        translationKey: 'wedo2.tiltDirection.right',\r\n        defaultMessage: 'right',\r\n    },\r\n};\r\n\r\nconst wedo2TiltAny = Object.assign({}, wedo2Tilt, {\r\n    any: {\r\n        translationKey: 'wedo2.tiltDirection.any',\r\n        defaultMessage: 'any',\r\n    },\r\n});\r\n\r\nexport const allMenus = {\r\n    motion_pointtowards: {\r\n        _mouse_: {\r\n            translationKey: 'MOTION_POINTTOWARDS_POINTER',\r\n            defaultMessage: 'mouse-pointer',\r\n        },\r\n        _random_: {\r\n            translationKey: 'MOTION_POINTTOWARDS_RANDOM',\r\n            defaultMessage: 'random position',\r\n        },\r\n    },\r\n    motion_goto: {\r\n        _mouse_: {\r\n            translationKey: 'MOTION_GOTO_POINTER',\r\n            defaultMessage: 'mouse-pointer',\r\n        },\r\n        _random_: {\r\n            translationKey: 'MOTION_GOTO_RANDOM',\r\n            defaultMessage: 'random position',\r\n        },\r\n    },\r\n    motion_glideto: {\r\n        _mouse_: {\r\n            translationKey: 'MOTION_GLIDETO_POINTER',\r\n            defaultMessage: 'mouse-pointer',\r\n        },\r\n        _random_: {\r\n            translationKey: 'MOTION_GLIDETO_RANDOM',\r\n            defaultMessage: 'random position',\r\n        },\r\n    },\r\n    motion_setrotationstyle: {\r\n        'left-right': {\r\n            translationKey: 'MOTION_SETROTATIONSTYLE_LEFTRIGHT',\r\n            defaultMessage: 'left-right',\r\n        },\r\n        \"don't rotate\": {\r\n            translationKey: 'MOTION_SETROTATIONSTYLE_DONTROTATE',\r\n            defaultMessage: \"don't rotate\",\r\n        },\r\n        'all around': {\r\n            translationKey: 'MOTION_SETROTATIONSTYLE_ALLAROUND',\r\n            defaultMessage: 'all around',\r\n        },\r\n    },\r\n    looks_changeeffectby: effects,\r\n    looks_seteffectto: effects,\r\n    looks_switchbackdropto: backdrops,\r\n    looks_gotofrontback: {\r\n        front: {\r\n            translationKey: 'LOOKS_GOTOFRONTBACK_FRONT',\r\n            defaultMessage: 'front',\r\n        },\r\n        back: {\r\n            translationKey: 'LOOKS_GOTOFRONTBACK_BACK',\r\n            defaultMessage: 'back',\r\n        },\r\n    },\r\n    looks_goforwardbackwardlayers: {\r\n        forward: {\r\n            translationKey: 'LOOKS_GOFORWARDBACKWARDLAYERS_FORWARD',\r\n            defaultMessage: 'forward',\r\n        },\r\n        backward: {\r\n            translationKey: 'LOOKS_GOFORWARDBACKWARDLAYERS_BACKWARD',\r\n            defaultMessage: 'backward',\r\n        },\r\n    },\r\n    looks_backdropnumbername: numberName,\r\n    looks_costumenumbername: numberName,\r\n    looks_switchbackdroptoandwait: backdrops,\r\n    sound_seteffectto: soundEffects,\r\n    sound_changeeffectby: soundEffects,\r\n    event_whengreaterthan: {\r\n        LOUDNESS: {\r\n            translationKey: 'EVENT_WHENGREATERTHAN_LOUDNESS',\r\n            defaultMessage: 'loudness',\r\n        },\r\n        TIMER: {\r\n            translationKey: 'EVENT_WHENGREATERTHAN_TIMER',\r\n            defaultMessage: 'timer',\r\n        },\r\n    },\r\n    event_whenkeypressed: keyOptions,\r\n    control_stop: {\r\n        all: {\r\n            translationKey: 'CONTROL_STOP_ALL',\r\n            defaultMessage: 'all',\r\n        },\r\n        'this script': {\r\n            translationKey: 'CONTROL_STOP_THIS',\r\n            defaultMessage: 'this script',\r\n        },\r\n        'other scripts in sprite': {\r\n            translationKey: 'CONTROL_STOP_OTHER',\r\n            defaultMessage: 'other scripts in sprite',\r\n        },\r\n    },\r\n    control_create_clone_of: {\r\n        _myself_: {\r\n            translationKey: 'CONTROL_CREATECLONEOF_MYSELF',\r\n            defaultMessage: 'myself',\r\n        },\r\n    },\r\n    sensing_touchingobject: {\r\n        _mouse_: {\r\n            translationKey: 'SENSING_TOUCHINGOBJECT_POINTER',\r\n            defaultMessage: 'mouse-pointer',\r\n        },\r\n        _edge_: {\r\n            translationKey: 'SENSING_TOUCHINGOBJECT_EDGE',\r\n            defaultMessage: 'edge',\r\n        },\r\n    },\r\n    sensing_distanceto: {\r\n        _mouse_: {\r\n            translationKey: 'SENSING_DISTANCETO_POINTER',\r\n            defaultMessage: 'mouse-pointer',\r\n        },\r\n    },\r\n    sensing_keypressed: keyOptions,\r\n    sensing_setdragmode: {\r\n        draggable: {\r\n            translationKey: 'SENSING_SETDRAGMODE_DRAGGABLE',\r\n            defaultMessage: 'draggable',\r\n        },\r\n        'not draggable': {\r\n            translationKey: 'SENSING_SETDRAGMODE_NOTDRAGGABLE',\r\n            defaultMessage: 'not draggable',\r\n        },\r\n    },\r\n    sensing_of: {\r\n        _stage_: {\r\n            translationKey: 'SENSING_OF_STAGE',\r\n            defaultMessage: 'Stage',\r\n        },\r\n        'x position': {\r\n            translationKey: 'SENSING_OF_XPOSITION',\r\n            defaultMessage: 'x position',\r\n        },\r\n        'y position': {\r\n            translationKey: 'SENSING_OF_YPOSITION',\r\n            defaultMessage: 'y position',\r\n        },\r\n        direction: {\r\n            translationKey: 'SENSING_OF_DIRECTION',\r\n            defaultMessage: 'direction',\r\n        },\r\n        'costume #': {\r\n            translationKey: 'SENSING_OF_COSTUMENUMBER',\r\n            defaultMessage: 'costume #',\r\n        },\r\n        'costume name': {\r\n            translationKey: 'SENSING_OF_COSTUMENAME',\r\n            defaultMessage: 'costume name',\r\n        },\r\n        size: {\r\n            translationKey: 'SENSING_OF_SIZE',\r\n            defaultMessage: 'size',\r\n        },\r\n        volume: {\r\n            translationKey: 'SENSING_OF_VOLUME',\r\n            defaultMessage: 'volume',\r\n        },\r\n        'backdrop #': {\r\n            translationKey: 'SENSING_OF_BACKDROPNUMBER',\r\n            defaultMessage: 'backdrop #',\r\n        },\r\n        'backdrop name': {\r\n            translationKey: 'SENSING_OF_BACKDROPNAME',\r\n            defaultMessage: 'backdrop name',\r\n        },\r\n    },\r\n    sensing_current: {\r\n        YEAR: {\r\n            translationKey: 'SENSING_CURRENT_YEAR',\r\n            defaultMessage: 'year',\r\n        },\r\n        MONTH: {\r\n            translationKey: 'SENSING_CURRENT_MONTH',\r\n            defaultMessage: 'month',\r\n        },\r\n        DATE: {\r\n            translationKey: 'SENSING_CURRENT_DATE',\r\n            defaultMessage: 'date',\r\n        },\r\n        DAYOFWEEK: {\r\n            translationKey: 'SENSING_CURRENT_DAYOFWEEK',\r\n            defaultMessage: 'day of week',\r\n        },\r\n        HOUR: {\r\n            translationKey: 'SENSING_CURRENT_HOUR',\r\n            defaultMessage: 'hour',\r\n        },\r\n        MINUTE: {\r\n            translationKey: 'SENSING_CURRENT_MINUTE',\r\n            defaultMessage: 'minute',\r\n        },\r\n        SECOND: {\r\n            translationKey: 'SENSING_CURRENT_SECOND',\r\n            defaultMessage: 'second',\r\n        },\r\n    },\r\n    operator_mathop: {\r\n        abs: {\r\n            translationKey: 'OPERATORS_MATHOP_ABS',\r\n            defaultMessage: 'abs',\r\n        },\r\n        floor: {\r\n            translationKey: 'OPERATORS_MATHOP_FLOOR',\r\n            defaultMessage: 'floor',\r\n        },\r\n        ceiling: {\r\n            translationKey: 'OPERATORS_MATHOP_CEILING',\r\n            defaultMessage: 'ceiling',\r\n        },\r\n        sqrt: {\r\n            translationKey: 'OPERATORS_MATHOP_SQRT',\r\n            defaultMessage: 'sqrt',\r\n        },\r\n        sin: {\r\n            translationKey: 'OPERATORS_MATHOP_SIN',\r\n            defaultMessage: 'sin',\r\n        },\r\n        cos: {\r\n            translationKey: 'OPERATORS_MATHOP_COS',\r\n            defaultMessage: 'cos',\r\n        },\r\n        tan: {\r\n            translationKey: 'OPERATORS_MATHOP_TAN',\r\n            defaultMessage: 'tan',\r\n        },\r\n        asin: {\r\n            translationKey: 'OPERATORS_MATHOP_ASIN',\r\n            defaultMessage: 'asin',\r\n        },\r\n        acos: {\r\n            translationKey: 'OPERATORS_MATHOP_ACOS',\r\n            defaultMessage: 'acos',\r\n        },\r\n        atan: {\r\n            translationKey: 'OPERATORS_MATHOP_ATAN',\r\n            defaultMessage: 'atan',\r\n        },\r\n        ln: {\r\n            translationKey: 'OPERATORS_MATHOP_LN',\r\n            defaultMessage: 'ln',\r\n        },\r\n        log: {\r\n            translationKey: 'OPERATORS_MATHOP_LOG',\r\n            defaultMessage: 'log',\r\n        },\r\n        'e ^': {\r\n            translationKey: 'OPERATORS_MATHOP_EEXP',\r\n            defaultMessage: 'e ^',\r\n        },\r\n        '10 ^': {\r\n            translationKey: 'OPERATORS_MATHOP_10EXP',\r\n            defaultMessage: '10 ^',\r\n        },\r\n    },\r\n    pen_changePenColorParamBy: colorParam,\r\n    pen_setPenColorParamTo: colorParam,\r\n    music_playDrumForBeats: {\r\n        1: {\r\n            translationKey: 'music.drumSnare',\r\n            defaultMessage: '(1) Snare Drum',\r\n        },\r\n        2: {\r\n            translationKey: 'music.drumBass',\r\n            defaultMessage: '(2) Bass Drum',\r\n        },\r\n        3: {\r\n            translationKey: 'music.drumSideStick',\r\n            defaultMessage: '(3) Side Stick',\r\n        },\r\n        4: {\r\n            translationKey: 'music.drumCrashCymbal',\r\n            defaultMessage: '(4) Crash Cymbal',\r\n        },\r\n        5: {\r\n            translationKey: 'music.drumOpenHiHat',\r\n            defaultMessage: '(5) Open Hi-Hat',\r\n        },\r\n        6: {\r\n            translationKey: 'music.drumClosedHiHat',\r\n            defaultMessage: '(6) Closed Hi-Hat',\r\n        },\r\n        7: {\r\n            translationKey: 'music.drumTambourine',\r\n            defaultMessage: '(7) Tambourine',\r\n        },\r\n        8: {\r\n            translationKey: 'music.drumHandClap',\r\n            defaultMessage: '(8) Hand Clap',\r\n        },\r\n        9: {\r\n            translationKey: 'music.drumClaves',\r\n            defaultMessage: '(9) Claves',\r\n        },\r\n        10: {\r\n            translationKey: 'music.drumWoodBlock',\r\n            defaultMessage: '(10) Wood Block',\r\n        },\r\n        11: {\r\n            translationKey: 'music.drumCowbell',\r\n            defaultMessage: '(11) Cowbell',\r\n        },\r\n        12: {\r\n            translationKey: 'music.drumTriangle',\r\n            defaultMessage: '(12) Triangle',\r\n        },\r\n        13: {\r\n            translationKey: 'music.drumBongo',\r\n            defaultMessage: '(13) Bongo',\r\n        },\r\n        14: {\r\n            translationKey: 'music.drumConga',\r\n            defaultMessage: '(14) Conga',\r\n        },\r\n        15: {\r\n            translationKey: 'music.drumCabasa',\r\n            defaultMessage: '(15) Cabasa',\r\n        },\r\n        16: {\r\n            translationKey: 'music.drumGuiro',\r\n            defaultMessage: '(16) Guiro',\r\n        },\r\n        17: {\r\n            translationKey: 'music.drumVibraslap',\r\n            defaultMessage: '(17) Vibraslap',\r\n        },\r\n        18: {\r\n            translationKey: 'music.drumCuica',\r\n            defaultMessage: '(18) Cuica',\r\n        },\r\n    },\r\n    music_setInstrument: {\r\n        1: {\r\n            translationKey: 'music.instrumentPiano',\r\n            defaultMessage: '(1) Piano',\r\n        },\r\n        2: {\r\n            translationKey: 'music.instrumentElectricPiano',\r\n            defaultMessage: '(2) Electric Piano',\r\n        },\r\n        3: {\r\n            translationKey: 'music.instrumentOrgan',\r\n            defaultMessage: '(3) Organ',\r\n        },\r\n        4: {\r\n            translationKey: 'music.instrumentGuitar',\r\n            defaultMessage: '(4) Guitar',\r\n        },\r\n        5: {\r\n            translationKey: 'music.instrumentElectricGuitar',\r\n            defaultMessage: '(5) Electric Guitar',\r\n        },\r\n        6: {\r\n            translationKey: 'music.instrumentBass',\r\n            defaultMessage: '(6) Bass',\r\n        },\r\n        7: {\r\n            translationKey: 'music.instrumentPizzicato',\r\n            defaultMessage: '(7) Pizzicato',\r\n        },\r\n        8: {\r\n            translationKey: 'music.instrumentCello',\r\n            defaultMessage: '(8) Cello',\r\n        },\r\n        9: {\r\n            translationKey: 'music.instrumentTrombone',\r\n            defaultMessage: '(9) Trombone',\r\n        },\r\n        10: {\r\n            translationKey: 'music.instrumentClarinet',\r\n            defaultMessage: '(10) Clarinet',\r\n        },\r\n        11: {\r\n            translationKey: 'music.instrumentSaxophone',\r\n            defaultMessage: '(11) Saxophone',\r\n        },\r\n        12: {\r\n            translationKey: 'music.instrumentFlute',\r\n            defaultMessage: '(12) Flute',\r\n        },\r\n        13: {\r\n            translationKey: 'music.instrumentWoodenFlute',\r\n            defaultMessage: '(13) Wooden Flute',\r\n        },\r\n        14: {\r\n            translationKey: 'music.instrumentBassoon',\r\n            defaultMessage: '(14) Bassoon',\r\n        },\r\n        15: {\r\n            translationKey: 'music.instrumentChoir',\r\n            defaultMessage: '(15) Choir',\r\n        },\r\n        16: {\r\n            translationKey: 'music.instrumentVibraphone',\r\n            defaultMessage: '(16) Vibraphone',\r\n        },\r\n        17: {\r\n            translationKey: 'music.instrumentMusicBox',\r\n            defaultMessage: '(17) Music Box',\r\n        },\r\n        18: {\r\n            translationKey: 'music.instrumentSteelDrum',\r\n            defaultMessage: '(18) Steel Drum',\r\n        },\r\n        19: {\r\n            translationKey: 'music.instrumentMarimba',\r\n            defaultMessage: '(19) Marimba',\r\n        },\r\n        20: {\r\n            translationKey: 'music.instrumentSynthLead',\r\n            defaultMessage: '(20) Synth Lead',\r\n        },\r\n        21: {\r\n            translationKey: 'music.instrumentSynthPad',\r\n            defaultMessage: '(21) Synth Pad',\r\n        },\r\n    },\r\n    videoSensing_videoOn: {\r\n        motion: {\r\n            translationKey: 'videoSensing.motion',\r\n            defaultMessage: 'motion',\r\n        },\r\n        direction: {\r\n            translationKey: 'videoSensing.direction',\r\n            defaultMessage: 'direction',\r\n        },\r\n        Stage: {\r\n            translationKey: 'videoSensing.stage',\r\n            defaultMessage: 'stage',\r\n        },\r\n        'this sprite': {\r\n            translationKey: 'videoSensing.sprite',\r\n            defaultMessage: 'sprite',\r\n        },\r\n    },\r\n    videoSensing_videoToggle: {\r\n        off: {\r\n            translationKey: 'videoSensing.off',\r\n            defaultMessage: 'off',\r\n        },\r\n        on: {\r\n            translationKey: 'videoSensing.on',\r\n            defaultMessage: 'on',\r\n        },\r\n        'on-flipped': {\r\n            translationKey: 'videoSensing.onFlipped',\r\n            defaultMessage: 'on flipped',\r\n        },\r\n    },\r\n    translate_getTranslate: translateLanguages,\r\n    text2speech_setLanguage: ttsLanguages,\r\n    text2speech_setVoice: {\r\n        ALTO: {\r\n            translationKey: 'text2speech.alto',\r\n            defaultMessage: 'alto',\r\n        },\r\n        TENOR: {\r\n            translationKey: 'text2speech.tenor',\r\n            defaultMessage: 'tenor',\r\n        },\r\n        SQUEAK: {\r\n            translationKey: 'text2speech.squeak',\r\n            defaultMessage: 'squeak',\r\n        },\r\n        GIANT: {\r\n            translationKey: 'text2speech.giant',\r\n            defaultMessage: 'giant',\r\n        },\r\n        KITTEN: {\r\n            translationKey: 'text2speech.kitten',\r\n            defaultMessage: 'kitten',\r\n        },\r\n    },\r\n    boost_motorOnFor: boostMotorId,\r\n    boost_motorOnForRotation: boostMotorId,\r\n    boost_motorOn: boostMotorId,\r\n    boost_motorOff: boostMotorId,\r\n    boost_setMotorPower: boostMotorId,\r\n    boost_setMotorDirection: Object.assign(\r\n        {\r\n            'this way': {\r\n                translationKey: 'boost.motorDirection.forward',\r\n                defaultMessage: 'this way',\r\n            },\r\n            'that way': {\r\n                translationKey: 'boost.motorDirection.backward',\r\n                defaultMessage: 'that way',\r\n            },\r\n            reverse: {\r\n                translationKey: 'boost.motorDirection.reverse',\r\n                defaultMessage: 'reverse',\r\n            },\r\n        },\r\n        boostMotorId\r\n    ),\r\n    boost_getMotorPosition: {\r\n        A: {\r\n            defaultMessage: 'A',\r\n        },\r\n        B: {\r\n            defaultMessage: 'B',\r\n        },\r\n        C: {\r\n            defaultMessage: 'C',\r\n        },\r\n        D: {\r\n            defaultMessage: 'D',\r\n        },\r\n    },\r\n    boost_whenColor: boostColor,\r\n    boost_seeingColor: boostColor,\r\n    boost_whenTilted: Object.assign({}, boostTilt, {\r\n        any: {\r\n            translationKey: 'boost.tiltDirection.any',\r\n            defaultMessage: 'any',\r\n        },\r\n    }),\r\n    boost_getTiltAngle: boostTilt,\r\n    ev3_motorTurnClockwise: ev3MotorPorts,\r\n    ev3_motorTurnCounterClockwise: ev3MotorPorts,\r\n    ev3_motorSetPower: ev3MotorPorts,\r\n    ev3_getMotorPosition: ev3MotorPorts,\r\n    ev3_whenButtonPressed: ev3SensorPorts,\r\n    ev3_buttonPressed: ev3SensorPorts,\r\n    gdxfor_whenGesture: {\r\n        shaken: {\r\n            translationKey: 'gdxfor.shaken',\r\n            defaultMessage: 'shaken',\r\n        },\r\n        'started falling': {\r\n            translationKey: 'gdxfor.startedFalling',\r\n            defaultMessage: 'started falling',\r\n        },\r\n        'turned face up': {\r\n            translationKey: 'gdxfor.turnedFaceUp',\r\n            defaultMessage: 'turned face up',\r\n        },\r\n        'turned face down': {\r\n            translationKey: 'gdxfor.turnedFaceDown',\r\n            defaultMessage: 'turned face down',\r\n        },\r\n    },\r\n    gdxfor_whenForcePushedOrPulled: {\r\n        pushed: {\r\n            translationKey: 'gdxfor.pushed',\r\n            defaultMessage: 'pushed',\r\n        },\r\n        pulled: {\r\n            translationKey: 'gdxfor.pulled',\r\n            defaultMessage: 'pulled',\r\n        },\r\n    },\r\n    gdxfor_whenTilted: gdxforTiltAny,\r\n    gdxfor_isTilted: gdxforTiltAny,\r\n    gdxfor_getTilt: gdxforTilt,\r\n    gdxfor_getSpinSpeed: gdxforAxis,\r\n    gdxfor_getAcceleration: gdxforAxis,\r\n    makeymakey_whenMakeyKeyPressed: {\r\n        SPACE: {\r\n            translationKey: 'makeymakey.spaceKey',\r\n            defaultMessage: 'space',\r\n        },\r\n        UP: {\r\n            translationKey: 'makeymakey.upArrow',\r\n            defaultMessage: 'up arrow',\r\n        },\r\n        DOWN: {\r\n            translationKey: 'makeymakey.downArrow',\r\n            defaultMessage: 'down arrow',\r\n        },\r\n        RIGHT: {\r\n            translationKey: 'makeymakey.rightArrow',\r\n            defaultMessage: 'right arrow',\r\n        },\r\n        LEFT: {\r\n            translationKey: 'makeymakey.leftArrow',\r\n            defaultMessage: 'left arrow',\r\n        },\r\n        w: {\r\n            defaultMessage: 'w',\r\n        },\r\n        a: {\r\n            defaultMessage: 'a',\r\n        },\r\n        s: {\r\n            defaultMessage: 's',\r\n        },\r\n        d: {\r\n            defaultMessage: 'd',\r\n        },\r\n        f: {\r\n            defaultMessage: 'f',\r\n        },\r\n        g: {\r\n            defaultMessage: 'g',\r\n        },\r\n    },\r\n    makeymakey_whenCodePressed: makeymakeySequences,\r\n    microbit_whenButtonPressed: microbitButtons,\r\n    microbit_isButtonPressed: microbitButtons,\r\n    microbit_whenGesture: {\r\n        moved: {\r\n            translationKey: 'microbit.gesturesMenu.moved',\r\n            defaultMessage: 'moved',\r\n        },\r\n        shaken: {\r\n            translationKey: 'microbit.gesturesMenu.shaken',\r\n            defaultMessage: 'shaken',\r\n        },\r\n        jumped: {\r\n            translationKey: 'microbit.gesturesMenu.jumped',\r\n            defaultMessage: 'jumped',\r\n        },\r\n    },\r\n    microbit_whenTilted: microbitTiltAny,\r\n    microbit_isTilted: microbitTiltAny,\r\n    microbit_getTiltAngle: microbitTilt,\r\n    microbit_whenPinConnected: {\r\n        0: {\r\n            defaultMessage: '0',\r\n        },\r\n        1: {\r\n            defaultMessage: '1',\r\n        },\r\n        2: {\r\n            defaultMessage: '2',\r\n        },\r\n    },\r\n    wedo2_motorOnFor: wedo2Motors,\r\n    wedo2_motorOn: wedo2Motors,\r\n    wedo2_motorOff: wedo2Motors,\r\n    wedo2_startMotorPower: wedo2Motors,\r\n    wedo2_setMotorDirection: Object.assign({}, wedo2Motors, {\r\n        'this way': {\r\n            translationKey: 'wedo2.motorDirection.forward',\r\n            defaultMessage: 'this way',\r\n        },\r\n        'that way': {\r\n            translationKey: 'wedo2.motorDirection.backward',\r\n            defaultMessage: 'that way',\r\n        },\r\n        reverse: {\r\n            translationKey: 'wedo2.motorDirection.reverse',\r\n            defaultMessage: 'reverse',\r\n        },\r\n    }),\r\n    wedo2_whenDistance: {\r\n        '<': {\r\n            defaultMessage: '<',\r\n        },\r\n        '>': {\r\n            defaultMessage: '>',\r\n        },\r\n    },\r\n    wedo2_whenTilted: wedo2TiltAny,\r\n    wedo2_isTilted: wedo2TiltAny,\r\n    wedo2_getTiltAngle: wedo2Tilt,\r\n};\r\n","const BLOCK = 0;\r\nconst BOOLEAN_BLOCK = 1;\r\nconst C_BLOCK = 2;\r\nconst E_BLOCK = 3;\r\nconst REPORTER_BLOCK = 4;\r\n\r\nexport { BLOCK, BOOLEAN_BLOCK, C_BLOCK, E_BLOCK, REPORTER_BLOCK };\r\n","/* Translations omitted */\nexport default ({});","/* Translations omitted */\nexport default ({});","export default { default: {} };\r\n\r\nexport const specialMessageMap = {\r\n    else: 'control_else',\r\n};\r\n","export default class Sanitizer {\r\n    static sanitize(content) {\r\n        return (content || '')\r\n            .replace(/[\\u0001-\\u001f]/g, '') // eslint-disable-line no-control-regex\r\n            .replace(/[)\\]>\\\\@]/g, '\\\\$&');\r\n    }\r\n\r\n    static labelSanitize(content) {\r\n        return Sanitizer.sanitize(content)\r\n            .replace(/[<([]/g, '\\\\$&')\r\n            .replace(/::|\\/\\//g, '\\\\$&');\r\n    }\r\n}\r\n","import { default as allBlocks, allMenus } from './all-blocks.js';\r\nimport translations from './translations.js';\r\nimport localeOptions from './options.js';\r\nimport { specialMessageMap } from './special-messages.js';\r\nimport Sanitizer from '../sanitizer.js';\r\n\r\nconst _translationKeyToOpcode = {};\r\nObject.keys(allBlocks).forEach(opcode => {\r\n    const entry = allBlocks[opcode];\r\n    if (entry.noTranslation) return;\r\n    const translationKey = entry.translationKey || opcode.toUpperCase();\r\n    if (Object.prototype.hasOwnProperty.call(_translationKeyToOpcode, translationKey)) return;\r\n    _translationKeyToOpcode[translationKey] = opcode;\r\n});\r\n\r\nconst getOpcodeFromTranslationKey = translationKey => _translationKeyToOpcode[translationKey];\r\n\r\nconst getTranslationKeyFromValue = (locale, value) => {\r\n    const localeTranslation = translations[locale];\r\n    let candidates = [];\r\n    if (localeTranslation) {\r\n        candidates = Object.keys(localeTranslation).filter(key => localeTranslation[key] === value);\r\n    } else {\r\n        candidates = Object.values(allBlocks).filter(item => item.defaultMessage === value);\r\n    }\r\n    return candidates.length ? candidates[0] : null;\r\n};\r\n\r\nconst getMessageForLocale = (locale, opcode) => {\r\n    const translationKey = allBlocks[opcode].translationKey || opcode.toUpperCase();\r\n    if (translations[locale] && translations[locale][translationKey]) {\r\n        return Sanitizer.labelSanitize(translations[locale][translationKey]);\r\n    }\r\n    return Sanitizer.labelSanitize(allBlocks[opcode].defaultMessage);\r\n};\r\n\r\nconst getOptsForLocale = (locale, opcode) => {\r\n    const translationKey = allBlocks[opcode].translationKey || opcode.toUpperCase();\r\n    if (translations[locale] && translations[locale][translationKey]) {\r\n        if (localeOptions[locale] && localeOptions[locale][translationKey]) {\r\n            return {\r\n                category: localeOptions[locale][translationKey],\r\n            };\r\n        }\r\n        return {};\r\n    }\r\n    return allBlocks[opcode].defaultOptions || {};\r\n};\r\n\r\nconst getSpecialMessage = (locale, key) => {\r\n    if (Object.prototype.hasOwnProperty.call(specialMessageMap, key))\r\n        return getMessageForLocale(locale, specialMessageMap[key]);\r\n};\r\n\r\nconst isSpecialMenuValue = (opcode, value) =>\r\n    Object.prototype.hasOwnProperty.call(allMenus[opcode] || {}, value);\r\n\r\nconst getMenuItemForLocale = (locale, opcode, value) => {\r\n    const translationKey = allMenus[opcode][value].translationKey;\r\n    if (translations[locale] && translations[locale][translationKey]) {\r\n        return Sanitizer.sanitize(translations[locale][translationKey]);\r\n    }\r\n    return Sanitizer.sanitize(allMenus[opcode][value].defaultMessage);\r\n};\r\n\r\nexport {\r\n    getMessageForLocale,\r\n    getOptsForLocale,\r\n    getSpecialMessage,\r\n    isSpecialMenuValue,\r\n    getMenuItemForLocale,\r\n    getOpcodeFromTranslationKey,\r\n    getTranslationKeyFromValue,\r\n};\r\n","import { getMessageForLocale, getOptsForLocale } from '../block-mapping/block-mapping.js';\r\n\r\nexport default class Block {\r\n    constructor(id, opcode, inputtables) {\r\n        this.id = id;\r\n        this.opcode = opcode;\r\n        this.inputtables = inputtables || {};\r\n    }\r\n\r\n    blockSyntax(locale, opts) {\r\n        const syntax = getMessageForLocale(locale, this.opcode);\r\n        if (this.opcode === 'control_stop') {\r\n            return `${syntax} ${this.inputtables.STOP_OPTION.toScratchblocks(locale, opts)}`;\r\n        }\r\n        return syntax.replace(/\\{([\\w-]+)\\}/g, (_, key) =>\r\n            this.inputtables[key].toScratchblocks(locale, opts)\r\n        );\r\n    }\r\n\r\n    useOptions(locale, opts) {\r\n        opts = Object.assign({}, getOptsForLocale(locale, this.opcode), opts);\r\n        const optionArray = [];\r\n        if (opts.category) optionArray.push(opts.category);\r\n        if (opts.type) optionArray.push(opts.type);\r\n        if (optionArray.length) return `::${optionArray.join(' ')}`;\r\n        return '';\r\n    }\r\n\r\n    toScratchblocks(locale, opts) {\r\n        return `${this.blockSyntax(locale, opts)}${this.useOptions(locale, opts)}`;\r\n    }\r\n}\r\n","import Block from './block.js';\r\n\r\nexport default class BooleanBlock extends Block {\r\n    toScratchblocks(locale, opts) {\r\n        return `<${this.blockSyntax(locale, opts)}${this.useOptions(locale, opts)}>`;\r\n    }\r\n}\r\n","import Block from './block.js';\r\n\r\nexport default class CBlock extends Block {\r\n    constructor(id, opcode, inputtables, block_key) {\r\n        super(id, opcode, inputtables);\r\n        this.block_key = block_key || 'SUBSTACK';\r\n    }\r\n\r\n    toScratchblocks(locale, opts) {\r\n        const blockLabel = this.blockSyntax(locale, opts);\r\n        const blocks = this.inputtables[this.block_key].toScratchblocks(locale, opts);\r\n        const end = 'end';\r\n        const tab = (opts.tab || '').repeat((opts._stackNum || 1) - 1);\r\n        return `${blockLabel}${this.useOptions(locale, opts)}\r\n${blocks}\r\n${tab}${end}`;\r\n    }\r\n}\r\n","import Block from './block.js';\r\nimport { getSpecialMessage } from '../block-mapping/block-mapping.js';\r\n\r\nexport default class EBlock extends Block {\r\n    constructor(id, opcode, inputtables, block_key, else_key) {\r\n        super(id, opcode, inputtables);\r\n        this.block_key = block_key || 'SUBSTACK';\r\n        this.else_key = else_key || 'SUBSTACK2';\r\n    }\r\n\r\n    toScratchblocks(locale, opts) {\r\n        const blockLabel = this.blockSyntax(locale, opts);\r\n        const firstBlocks = this.inputtables[this.block_key].toScratchblocks(locale, opts);\r\n        const elseLabel = getSpecialMessage(locale, 'else');\r\n        const elseBlocks = this.inputtables[this.else_key].toScratchblocks(locale, opts);\r\n        const end = 'end';\r\n        const tab = (opts.tab || '').repeat((opts._stackNum || 1) - 1);\r\n        return `${blockLabel}${this.useOptions(locale, opts)}\r\n${firstBlocks}\r\n${tab}${elseLabel}\r\n${elseBlocks}\r\n${tab}${end}`;\r\n    }\r\n}\r\n","import Block from './block.js';\r\n\r\nexport default class ReporterBlock extends Block {\r\n    toScratchblocks(locale, opts) {\r\n        return `(${this.blockSyntax(locale, opts)}${this.useOptions(locale, opts)})`;\r\n    }\r\n}\r\n","import allBlocks from '../block-mapping/all-blocks.js';\r\nimport Sanitizer from '../sanitizer.js';\r\nimport { BLOCK, BOOLEAN_BLOCK, REPORTER_BLOCK } from '../block-mapping/block-enum.js';\r\nimport {\r\n    getTranslationKeyFromValue,\r\n    getOpcodeFromTranslationKey,\r\n} from '../block-mapping/block-mapping.js';\r\n\r\nexport default class Variable {\r\n    constructor(id, value, category, type) {\r\n        this.id = id;\r\n        this.value = value;\r\n        this.category = category;\r\n        this.type = type || REPORTER_BLOCK;\r\n    }\r\n\r\n    needsOpts(locale) {\r\n        const translationKey = getTranslationKeyFromValue(locale, this.value);\r\n        if (!translationKey) return false;\r\n        const opcode = getOpcodeFromTranslationKey(translationKey);\r\n        if (!Object.prototype.hasOwnProperty.call(allBlocks, opcode)) return false;\r\n        return allBlocks[opcode].type === REPORTER_BLOCK;\r\n    }\r\n\r\n    toScratchblocks(locale, opts) {\r\n        let options = '';\r\n        if (this.category) {\r\n            options = `::${this.category}`;\r\n        } else if (\r\n            opts.variableStyle === 'always' ||\r\n            (opts.variableStyle === 'as-needed' && this.needsOpts(locale))\r\n        ) {\r\n            options = '::variables';\r\n        }\r\n        const block = `${Sanitizer.sanitize(this.value)}${options}`;\r\n        switch (this.type) {\r\n            case REPORTER_BLOCK:\r\n                return `(${block})`;\r\n            case BOOLEAN_BLOCK:\r\n                return `<${block}>`;\r\n            case BLOCK:\r\n                return block;\r\n        }\r\n    }\r\n}\r\n","import { getMessageForLocale } from '../block-mapping/block-mapping.js';\r\n\r\nexport default class Definition {\r\n    constructor(id, proc) {\r\n        this.id = id;\r\n        this.proc = proc;\r\n    }\r\n\r\n    toScratchblocks(locale) {\r\n        return getMessageForLocale(locale, 'procedures_definition').replace('{PROC}', this.proc);\r\n    }\r\n}\r\n","import Sanitizer from '../sanitizer.js';\r\nexport default class ProcedureCall {\r\n    constructor(id, proc, argObj) {\r\n        this.id = id;\r\n        this.proc = proc;\r\n        this.argObj = argObj;\r\n    }\r\n\r\n    toScratchblocks(locale, opts) {\r\n        let i = 0;\r\n        const procCode = Sanitizer.labelSanitize(this.proc).replace(/%([sb])/g, () =>\r\n            this.argObj[i++].toScratchblocks(locale, opts)\r\n        );\r\n        return `${procCode}::custom`;\r\n    }\r\n}\r\n","export default class Icon {\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n\r\n    toScratchblocks() {\r\n        return `@${this.name}`;\r\n    }\r\n}\r\n","import Sanitizer from '../sanitizer.js';\r\nimport { getMenuItemForLocale, isSpecialMenuValue } from '../block-mapping/block-mapping.js';\r\n\r\nexport default class Menu {\r\n    constructor(id, opcode, content) {\r\n        this.id = id;\r\n        // note: opcode is the opcode of the PARENT block.\r\n        this.opcode = opcode;\r\n        this.content = content;\r\n        this.isSpecial = isSpecialMenuValue(opcode, content);\r\n    }\r\n\r\n    blockSyntax(locale) {\r\n        return getMenuItemForLocale(locale, this.opcode, this.content);\r\n    }\r\n\r\n    toScratchblocks(locale) {\r\n        if (!this.isSpecial) return `[${Sanitizer.sanitize(this.content)} v]`;\r\n        return `[${Sanitizer.sanitize(this.blockSyntax(locale))} v]`;\r\n    }\r\n}\r\n","import Sanitizer from '../sanitizer.js';\r\n\r\nclass Input {\r\n    constructor(content) {\r\n        this.content = Sanitizer.sanitize(String(content || ''));\r\n    }\r\n\r\n    toScratchblocks() {\r\n        return this.content;\r\n    }\r\n}\r\n\r\nclass NumberInput extends Input {\r\n    toScratchblocks() {\r\n        return `(${this.content})`;\r\n    }\r\n}\r\n\r\nclass StringInput extends Input {\r\n    toScratchblocks() {\r\n        return `[${this.content}]`;\r\n    }\r\n}\r\n\r\nclass ColorPickerInput extends Input {\r\n    toScratchblocks() {\r\n        return `[${this.content}]`;\r\n    }\r\n}\r\n\r\nclass BroadcastMenuInput extends Input {\r\n    toScratchblocks() {\r\n        return `[${this.content} v]`;\r\n    }\r\n}\r\n\r\nclass EmptyBooleanInput extends Input {\r\n    toScratchblocks() {\r\n        return '<>';\r\n    }\r\n}\r\n\r\nexport {\r\n    Input as default,\r\n    NumberInput,\r\n    StringInput,\r\n    ColorPickerInput,\r\n    BroadcastMenuInput,\r\n    EmptyBooleanInput,\r\n};\r\n","export default class Stack {\r\n    constructor(blocks) {\r\n        this.blocks = blocks || [];\r\n    }\r\n\r\n    toScratchblocks(locale, opts) {\r\n        const tab = (opts.tab || '').repeat(opts._stackNum || 1);\r\n        opts._stackNum = (opts._stackNum || 1) + 1;\r\n        const render = this.blocks\r\n            .map(block => `${tab}${block.toScratchblocks(locale, opts)}`)\r\n            .join('\\n');\r\n        opts._stackNum -= 1;\r\n        return render;\r\n    }\r\n}\r\n","import Block from '../block-type/block.js';\r\nimport BooleanBlock from '../block-type/boolean-block.js';\r\nimport CBlock from '../block-type/c-block.js';\r\nimport EBlock from '../block-type/e-block.js';\r\nimport ReporterBlock from '../block-type/reporter-block.js';\r\nimport Variable from '../block-type/variable.js';\r\nimport Definition from '../block-type/definition.js';\r\nimport ProcedureCall from '../block-type/procedure-call.js';\r\n\r\nimport Icon from '../input/icon.js';\r\nimport Menu from '../input/menu.js';\r\nimport {\r\n    NumberInput,\r\n    StringInput,\r\n    ColorPickerInput,\r\n    BroadcastMenuInput,\r\n    EmptyBooleanInput,\r\n} from '../input/input.js';\r\nimport Stack from '../input/stack.js';\r\n\r\nimport allBlocks from '../block-mapping/all-blocks.js';\r\nimport {\r\n    BLOCK,\r\n    BOOLEAN_BLOCK,\r\n    C_BLOCK,\r\n    E_BLOCK,\r\n    REPORTER_BLOCK,\r\n} from '../block-mapping/block-enum.js';\r\n\r\nimport Sanitizer from '../sanitizer.js';\r\n\r\nconst BLOCK_INSERTED_NO_DEFAULT = 2;\r\nconst BLOCK_INSERTED_DEFAULT = 3;\r\n\r\nconst opcodeToIcon = {\r\n    event_whenflagclicked: new Icon('greenFlag'),\r\n    motion_turnleft: new Icon('turnLeft'),\r\n    motion_turnright: new Icon('turnRight'),\r\n};\r\n\r\nconst inputMap = new Map([\r\n    [9, ColorPickerInput],\r\n    [10, StringInput],\r\n    [11, BroadcastMenuInput],\r\n]);\r\n\r\nconst getInputtablesForBlock = (block, blocks, asScript) => {\r\n    const inputtables = {};\r\n    const opcode = block.opcode;\r\n    const blockInfo = allBlocks[opcode];\r\n    if (blockInfo.defaultMessage.includes('{ICON}')) inputtables.ICON = opcodeToIcon[opcode];\r\n    Object.keys(block.fields).forEach(key => {\r\n        // item 1 is variable ID, which we do not need.\r\n        inputtables[key] = new Menu(null, opcode, block.fields[key][0]);\r\n    });\r\n    Object.keys(block.inputs).forEach(key => {\r\n        const value = block.inputs[key];\r\n        const shadowType = value[0];\r\n        if (key.startsWith('SUBSTACK') && asScript) {\r\n            // Blocks inside C-block\r\n            inputtables[key] = new Stack(parseScript(value[1], blocks));\r\n            return;\r\n        }\r\n        const isInputVariable = Array.isArray(value[1]) && value[1][0] > 11;\r\n        if (\r\n            !isInputVariable &&\r\n            (shadowType === BLOCK_INSERTED_DEFAULT || shadowType === BLOCK_INSERTED_NO_DEFAULT)\r\n        ) {\r\n            // There's a block above it. We don't care about shadows\r\n            inputtables[key] = parseInsertedBlock(value[1], blocks);\r\n            return;\r\n        }\r\n        // No block above it.\r\n        // The input is variable, num/str or menu.\r\n        if (typeof value[1] === 'string') {\r\n            // value[1] is string, so it's menu\r\n            const menuBlockId = value[1];\r\n            const menu = blocks[menuBlockId];\r\n            if (menu.opcode === 'note') {\r\n                // Note is not a menu.\r\n                inputtables[key] = new NumberInput(menu.fields.NOTE[0]);\r\n            } else {\r\n                const fieldKey = Object.prototype.hasOwnProperty.call(blockInfo.remap || {}, key)\r\n                    ? blockInfo.remap[key]\r\n                    : key;\r\n                if (!Object.prototype.hasOwnProperty.call(menu.fields, fieldKey)) {\r\n                    // Note to whoever is reading this:\r\n                    // go to all-blocks.js and add \"remap\" object, from key to field key\r\n                    throw new Error(\r\n                        `Non-existent key ${fieldKey}/${key} for menu opcode ${opcode}, known: ${Object.keys(\r\n                            menu.fields\r\n                        )}. This is probably a bug and you should report this!`\r\n                    );\r\n                }\r\n                inputtables[key] = new Menu(menuBlockId, opcode, menu.fields[fieldKey][0]);\r\n            }\r\n        } else {\r\n            // value[1] is probably array\r\n            const inputDetails = value[1];\r\n            const inputType = inputDetails[0];\r\n            if (inputType === 12) {\r\n                // normal variable block\r\n                inputtables[key] = new Variable(null, inputDetails[1]);\r\n                return;\r\n            }\r\n            if (inputType === 13) {\r\n                // normal list block\r\n                inputtables[key] = new Variable(null, inputDetails[1], 'list');\r\n                return;\r\n            }\r\n            const inputConstructor = inputMap.get(inputType) || NumberInput;\r\n            inputtables[key] = new inputConstructor(inputDetails[1]);\r\n        }\r\n    });\r\n    if (asScript && !Object.prototype.hasOwnProperty.call(inputtables, 'SUBSTACK')) {\r\n        inputtables.SUBSTACK = new Stack();\r\n    }\r\n    if (\r\n        blockInfo.type === E_BLOCK &&\r\n        !Object.prototype.hasOwnProperty.call(inputtables, 'SUBSTACK2')\r\n    ) {\r\n        inputtables.SUBSTACK2 = new Stack();\r\n    }\r\n    if (blockInfo.boolArg) {\r\n        blockInfo.boolArg.forEach(boolArg => {\r\n            if (!Object.prototype.hasOwnProperty.call(inputtables, boolArg)) {\r\n                inputtables[boolArg] = new EmptyBooleanInput();\r\n            }\r\n        });\r\n    }\r\n    return inputtables;\r\n};\r\n\r\nconst parseInsertedBlock = (blockId, blocks) => {\r\n    // Handles inserted blocks. NOTE: no variable/list, no stack\r\n    const block = blocks[blockId];\r\n    const opcode = block.opcode;\r\n    if (opcode === 'argument_reporter_string_number') {\r\n        return new Variable(blockId, block.fields.VALUE[0], 'custom', REPORTER_BLOCK);\r\n    }\r\n    if (opcode === 'argument_reporter_boolean') {\r\n        return new Variable(blockId, block.fields.VALUE[0], 'custom', BOOLEAN_BLOCK);\r\n    }\r\n    const blockInfo = allBlocks[opcode];\r\n    if (!blockInfo) {\r\n        // If you reached this line: please add entry to all-blocks.js.\r\n        throw new Error(\r\n            `Unknown block info for opcode ${opcode}. This is probably a bug and you should report this!`\r\n        );\r\n    }\r\n    let blockConstructor = Block;\r\n    switch (blockInfo.type) {\r\n        case BOOLEAN_BLOCK:\r\n            blockConstructor = BooleanBlock;\r\n            break;\r\n        case REPORTER_BLOCK:\r\n            blockConstructor = ReporterBlock;\r\n            break;\r\n    }\r\n    return new blockConstructor(blockId, opcode, getInputtablesForBlock(block, blocks));\r\n};\r\n\r\nconst getDefinition = (block, blocks) => {\r\n    const definitionId = block.inputs.custom_block[1];\r\n    const definition = blocks[definitionId];\r\n    const args = {\r\n        s: [],\r\n        b: [],\r\n    };\r\n    const counts = {\r\n        s: 0,\r\n        b: 0,\r\n    };\r\n    JSON.parse(definition.mutation.argumentids).forEach(argId => {\r\n        // For Scratch 2.0-ish definitions\r\n        argId = definition.inputs[argId][1];\r\n        const argBlock = blocks[argId];\r\n        const arg = argBlock.fields.VALUE[0];\r\n        if (argBlock.opcode === 'argument_reporter_string_number') {\r\n            args.s.push(`(${arg})`);\r\n        } else {\r\n            args.b.push(`<${arg}>`);\r\n        }\r\n    });\r\n    return new Definition(\r\n        block.id,\r\n        Sanitizer.labelSanitize(definition.mutation.proccode).replace(/%([sb])/g, (_, s_b) => {\r\n            return args[s_b][counts[s_b]++];\r\n        })\r\n    );\r\n};\r\n\r\nconst getProcCallArgs = (block, blocks) => {\r\n    const argIDs = JSON.parse(block.mutation.argumentids);\r\n    const argObjs = [];\r\n    let i = 0;\r\n    Array.from(block.mutation.proccode.matchAll(/%([sb])/g)).forEach(matchObj => {\r\n        const s_b = matchObj[1];\r\n        const id = argIDs[i++];\r\n        let argObj = null;\r\n        const input = block.inputs[id];\r\n        if (s_b === 'b' && !input) {\r\n            argObj = new EmptyBooleanInput();\r\n        } else {\r\n            const shadowType = input[0];\r\n            const isInputVariable = Array.isArray(input[1]) && input[1][0] > 11;\r\n            if (\r\n                !isInputVariable &&\r\n                (shadowType === BLOCK_INSERTED_DEFAULT || shadowType === BLOCK_INSERTED_NO_DEFAULT)\r\n            ) {\r\n                argObj = parseInsertedBlock(input[1], blocks);\r\n            } else {\r\n                const inputDetails = input[1];\r\n                const inputType = inputDetails[0];\r\n                if (inputType === 12) {\r\n                    // normal variable block\r\n                    argObj = new Variable(null, inputDetails[1]);\r\n                } else if (inputType === 13) {\r\n                    // normal list block\r\n                    argObj = new Variable(null, inputDetails[1], 'list');\r\n                } else {\r\n                    argObj = new StringInput(inputDetails[1]);\r\n                }\r\n            }\r\n        }\r\n        argObjs.push(argObj);\r\n    });\r\n    return argObjs;\r\n};\r\n\r\nconst parseScript = (scriptStart, blocks) => {\r\n    let blockId = scriptStart;\r\n    const parsedBlocks = [];\r\n    do {\r\n        const block = blocks[blockId];\r\n        block.id = blockId;\r\n        let parsedBlock;\r\n        const opcode = block.opcode;\r\n        const blockInfo = allBlocks[opcode];\r\n        if (!blockInfo) {\r\n            console.warn('Unknown opcode: ', opcode);\r\n            blockId = block.next;\r\n            continue;\r\n        }\r\n        if (opcode === 'procedures_definition') {\r\n            parsedBlock = getDefinition(block, blocks);\r\n        } else if (opcode === 'procedures_call') {\r\n            parsedBlock = new ProcedureCall(\r\n                block.id,\r\n                block.mutation.proccode,\r\n                getProcCallArgs(block, blocks)\r\n            );\r\n        } else {\r\n            const blockType = blockInfo.type || BLOCK;\r\n            switch (blockType) {\r\n                case BLOCK:\r\n                    parsedBlock = new Block(\r\n                        block.id,\r\n                        opcode,\r\n                        getInputtablesForBlock(block, blocks)\r\n                    );\r\n                    break;\r\n                case C_BLOCK:\r\n                    parsedBlock = new CBlock(\r\n                        block.id,\r\n                        opcode,\r\n                        getInputtablesForBlock(block, blocks, true)\r\n                    );\r\n                    break;\r\n                case E_BLOCK:\r\n                    parsedBlock = new EBlock(\r\n                        block.id,\r\n                        opcode,\r\n                        getInputtablesForBlock(block, blocks, true)\r\n                    );\r\n                    break;\r\n            }\r\n        }\r\n        parsedBlocks.push(parsedBlock);\r\n        blockId = block.next;\r\n    } while (blockId);\r\n    return parsedBlocks;\r\n};\r\n\r\nexport default parseScript;\r\n","import parseScript from './parse.js';\r\n\r\nconst toScratchblocks = (scriptStart, blocks, locale, opts) => {\r\n    if (!opts) opts = {};\r\n    opts = Object.assign(\r\n        {\r\n            tab: ' '.repeat(4),\r\n            variableStyle: 'none',\r\n            _stackNum: 0,\r\n        },\r\n        opts\r\n    );\r\n    const parsed = parseScript(scriptStart, blocks);\r\n    return parsed.map(block => block.toScratchblocks(locale, opts)).join('\\n');\r\n};\r\n\r\nexport default toScratchblocks;\r\n"],"names":["allBlocks","motion_movesteps","defaultMessage","motion_turnright","motion_turnleft","motion_pointindirection","motion_pointtowards","motion_gotoxy","motion_goto","motion_glidesecstoxy","motion_glideto","motion_changexby","motion_setx","motion_changeyby","motion_sety","motion_ifonedgebounce","motion_setrotationstyle","motion_xposition","type","motion_yposition","motion_direction","looks_sayforsecs","looks_say","looks_thinkforsecs","looks_think","looks_show","looks_hide","looks_changeeffectby","defaultOptions","category","looks_seteffectto","looks_cleargraphiceffects","looks_changesizeby","looks_setsizeto","looks_size","looks_switchcostumeto","looks_nextcostume","looks_switchbackdropto","looks_gotofrontback","looks_goforwardbackwardlayers","looks_backdropnumbername","looks_costumenumbername","looks_switchbackdroptoandwait","looks_nextbackdrop","translationKey","sound_play","sound_playuntildone","sound_stopallsounds","sound_seteffectto","sound_changeeffectby","sound_cleareffects","sound_changevolumeby","sound_setvolumeto","sound_volume","event_whenflagclicked","event_whenthisspriteclicked","event_whenstageclicked","event_whenbroadcastreceived","event_whenbackdropswitchesto","event_whengreaterthan","event_broadcast","event_broadcastandwait","event_whenkeypressed","control_forever","control_repeat","control_if","boolArg","control_if_else","control_else","control_stop","control_wait","control_wait_until","control_repeat_until","control_start_as_clone","control_create_clone_of","control_delete_this_clone","sensing_touchingobject","sensing_touchingcolor","sensing_coloristouchingcolor","sensing_distanceto","sensing_askandwait","sensing_answer","sensing_keypressed","sensing_mousedown","sensing_mousex","sensing_mousey","sensing_setdragmode","sensing_loudness","sensing_timer","sensing_resettimer","sensing_of","sensing_current","sensing_dayssince2000","sensing_username","operator_add","operator_subtract","operator_multiply","operator_divide","operator_random","operator_lt","operator_equals","operator_gt","operator_and","operator_or","operator_not","operator_join","operator_letter_of","operator_length","operator_contains","operator_mod","operator_round","operator_mathop","data_variable","noTranslation","data_setvariableto","data_changevariableby","data_showvariable","data_hidevariable","data_listcontents","data_addtolist","data_deleteoflist","data_deletealloflist","data_insertatlist","data_replaceitemoflist","data_itemoflist","data_itemnumoflist","data_lengthoflist","data_listcontainsitem","data_showlist","data_hidelist","procedures_definition","procedures_call","argument_reporter_boolean","argument_reporter_string_number","pen_clear","pen_stamp","pen_penDown","pen_penUp","pen_setPenColorToColor","pen_changePenColorParamBy","remap","COLOR_PARAM","pen_setPenColorParamTo","pen_changePenSizeBy","pen_setPenSizeTo","music_playDrumForBeats","music_restForBeats","music_playNoteForBeats","music_setInstrument","music_setTempo","music_changeTempo","music_getTempo","videoSensing_whenMotionGreaterThan","videoSensing_videoOn","videoSensing_videoToggle","videoSensing_setVideoTransparency","text2speech_speakAndWait","text2speech_setVoice","VOICE","text2speech_setLanguage","LANGUAGE","translate_getTranslate","translate_getViewerLanguage","boost_motorOnFor","boost_motorOnForRotation","boost_motorOn","boost_motorOff","boost_setMotorPower","boost_setMotorDirection","boost_getMotorPosition","boost_whenColor","boost_seeingColor","boost_whenTilted","boost_getTiltAngle","boost_setLightHue","ev3_motorTurnClockwise","PORT","ev3_motorTurnCounterClockwise","ev3_motorSetPower","ev3_getMotorPosition","ev3_whenButtonPressed","ev3_whenDistanceLessThan","ev3_whenBrightnessLessThan","ev3_buttonPressed","ev3_getDistance","ev3_getBrightness","ev3_beep","gdxfor_whenGesture","GESTURE","gdxfor_whenForcePushedOrPulled","PUSH_PULL","gdxfor_getForce","gdxfor_whenTilted","TILT","gdxfor_isTilted","gdxfor_getTilt","gdxfor_isFreeFalling","gdxfor_getSpinSpeed","DIRECTION","gdxfor_getAcceleration","makeymakey_whenMakeyKeyPressed","makeymakey_whenCodePressed","microbit_whenButtonPressed","BTN","microbit_isButtonPressed","microbit_whenGesture","microbit_displaySymbol","microbit_displayText","microbit_displayClear","microbit_whenTilted","microbit_isTilted","microbit_getTiltAngle","microbit_whenPinConnected","PIN","wedo2_motorOnFor","wedo2_motorOn","wedo2_motorOff","wedo2_startMotorPower","wedo2_setMotorDirection","wedo2_setLightHue","wedo2_playNoteFor","wedo2_whenDistance","wedo2_whenTilted","wedo2_getDistance","wedo2_isTilted","wedo2_getTiltAngle","robot_motors_on_for_seconds","robot_motors_on","robot_motors_off","robot_set_direction_to","robot_motors_on_for_steps","robot_reset_trip_meters","robot_turnright","robot_turnleft","robot_set_motors_power","robot_set_motors_power_left_right_separately","robot_set_motors_left_right_power_and_direction_separately","ROBOT_LEFT_MOTOR_DIRECTION","ROBOT_RIGHT_MOTOR_DIRECTION","robot_get_sensor_data","robot_start_button_pressed","robot_turn_led_on","robot_turn_led_off","effects","COLOR","FISHEYE","WHIRL","PIXELATE","MOSAIC","BRIGHTNESS","GHOST","backdrops","numberName","number","name","soundEffects","PITCH","PAN","keyOptions","space","any","colorParam","color","saturation","brightness","transparency","assignKey","o","keyPrefix","k","Object","keys","translateLanguages","sq","am","ar","hy","az","eu","be","bg","ca","hr","cs","da","nl","en","eo","et","fi","fr","gl","de","el","ht","hi","hu","is","id","ga","it","ja","kn","ko","ku","la","lv","lt","mk","ms","ml","mt","mi","mr","mn","my","fa","pl","pt","ro","ru","gd","sr","sk","sl","es","sv","te","th","tr","uk","uz","vi","cy","zu","he","ttsLanguages","nb","boostMotorId","A","B","C","D","AB","ALL","boostColor","red","blue","green","yellow","white","black","boostTilt","up","down","left","right","ev3MotorPorts","ev3SensorPorts","gdxforTilt","front","back","gdxforTiltAny","assign","gdxforAxis","x","y","z","makeymakeySequences","combinations","fromEntries","map","c","toUpperCase","replace","makeMakeymakeyCombs","microbitButtons","microbitTilt","microbitTiltAny","wedo2Motors","motor","wedo2Tilt","wedo2TiltAny","allMenus","_mouse_","_random_","forward","backward","LOUDNESS","TIMER","all","_myself_","_edge_","draggable","_stage_","direction","size","volume","YEAR","MONTH","DATE","DAYOFWEEK","HOUR","MINUTE","SECOND","abs","floor","ceiling","sqrt","sin","cos","tan","asin","acos","atan","ln","log","motion","Stage","off","on","ALTO","TENOR","SQUEAK","GIANT","KITTEN","reverse","shaken","pushed","pulled","SPACE","UP","DOWN","RIGHT","LEFT","w","a","s","d","f","g","moved","jumped","translations","localeOptions","specialMessageMap","else","Sanitizer","static","content","sanitize","_translationKeyToOpcode","forEach","opcode","entry","prototype","hasOwnProperty","call","getMessageForLocale","locale","labelSanitize","Block","constructor","inputtables","this","blockSyntax","opts","syntax","STOP_OPTION","toScratchblocks","_","key","useOptions","getOptsForLocale","optionArray","push","length","join","BooleanBlock","CBlock","block_key","super","blockLabel","blocks","tab","repeat","_stackNum","EBlock","else_key","firstBlocks","elseLabel","getSpecialMessage","elseBlocks","ReporterBlock","Variable","value","needsOpts","localeTranslation","candidates","filter","values","item","getTranslationKeyFromValue","getOpcodeFromTranslationKey","options","variableStyle","block","Definition","proc","ProcedureCall","argObj","i","Icon","Menu","isSpecial","isSpecialMenuValue","getMenuItemForLocale","Input","String","NumberInput","StringInput","ColorPickerInput","BroadcastMenuInput","EmptyBooleanInput","Stack","render","opcodeToIcon","inputMap","Map","getInputtablesForBlock","asScript","blockInfo","includes","ICON","fields","inputs","shadowType","startsWith","parseScript","Array","isArray","menuBlockId","menu","NOTE","fieldKey","Error","inputDetails","inputType","inputConstructor","get","parseInsertedBlock","SUBSTACK","SUBSTACK2","blockId","VALUE","blockConstructor","getDefinition","definitionId","custom_block","definition","args","b","counts","JSON","parse","mutation","argumentids","argId","argBlock","arg","proccode","s_b","getProcCallArgs","argIDs","argObjs","from","matchAll","matchObj","input","scriptStart","parsedBlocks","parsedBlock","next","console","warn"],"mappings":"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"}